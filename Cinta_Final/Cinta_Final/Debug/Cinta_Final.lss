
Cinta_Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000ee6  00000f7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000274  0080010a  0080010a  00000f84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001af9  00000000  00000000  00001144  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b6a  00000000  00000000  00002c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d27  00000000  00000000  000037a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003dc  00000000  00000000  000044d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009f7  00000000  00000000  000048ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a6e  00000000  00000000  000052a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005d11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 36 01 	jmp	0x26c	; 0x26c <__vector_10>
  2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_11>
  30:	0c 94 01 01 	jmp	0x202	; 0x202 <__vector_12>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__vector_16>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 a1 01 	jmp	0x342	; 0x342 <__vector_18>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	6f 03       	fmul	r22, r23
  6a:	7d 03       	fmul	r23, r21
  6c:	95 03       	fmuls	r17, r21
  6e:	aa 03       	fmulsu	r18, r18
  70:	bf 03       	fmulsu	r19, r23
  72:	cd 03       	fmulsu	r20, r21
  74:	f2 03       	fmuls	r23, r18

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	11 e0       	ldi	r17, 0x01	; 1
  84:	a0 e0       	ldi	r26, 0x00	; 0
  86:	b1 e0       	ldi	r27, 0x01	; 1
  88:	e6 ee       	ldi	r30, 0xE6	; 230
  8a:	fe e0       	ldi	r31, 0x0E	; 14
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	aa 30       	cpi	r26, 0x0A	; 10
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>

00000098 <__do_clear_bss>:
  98:	23 e0       	ldi	r18, 0x03	; 3
  9a:	aa e0       	ldi	r26, 0x0A	; 10
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	ae 37       	cpi	r26, 0x7E	; 126
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 66 05 	call	0xacc	; 0xacc <main>
  ac:	0c 94 71 07 	jmp	0xee2	; 0xee2 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <HCSR04_AddNew>:
  b4:	cf 92       	push	r12
  b6:	df 92       	push	r13
  b8:	ef 92       	push	r14
  ba:	ff 92       	push	r15
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
  c0:	ec 01       	movw	r28, r24
  c2:	6a 01       	movw	r12, r20
  c4:	7b 01       	movw	r14, r22
  c6:	8f e0       	ldi	r24, 0x0F	; 15
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 50 06 	call	0xca0	; 0xca0 <malloc>
  ce:	fc 01       	movw	r30, r24
  d0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
  d4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
  d8:	d1 83       	std	Z+1, r29	; 0x01
  da:	c0 83       	st	Z, r28
  dc:	c2 86       	std	Z+10, r12	; 0x0a
  de:	d3 86       	std	Z+11, r13	; 0x0b
  e0:	e4 86       	std	Z+12, r14	; 0x0c
  e2:	f5 86       	std	Z+13, r15	; 0x0d
  e4:	16 86       	std	Z+14, r1	; 0x0e
  e6:	11 86       	std	Z+9, r1	; 0x09
  e8:	10 86       	std	Z+8, r1	; 0x08
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	14 82       	std	Z+4, r1	; 0x04
  ee:	17 82       	std	Z+7, r1	; 0x07
  f0:	16 82       	std	Z+6, r1	; 0x06
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	fe 01       	movw	r30, r28
  f6:	09 95       	icall
  f8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
  fc:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	ff 90       	pop	r15
 106:	ef 90       	pop	r14
 108:	df 90       	pop	r13
 10a:	cf 90       	pop	r12
 10c:	08 95       	ret

0000010e <HCSR04_Start>:
 10e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 112:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 116:	dc 01       	movw	r26, r24
 118:	ed 91       	ld	r30, X+
 11a:	fc 91       	ld	r31, X
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	09 95       	icall
 120:	08 95       	ret

00000122 <HCSR04_TriggerReady>:
 122:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 126:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 12a:	dc 01       	movw	r26, r24
 12c:	ed 91       	ld	r30, X+
 12e:	fc 91       	ld	r31, X
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	09 95       	icall
 134:	08 95       	ret

00000136 <HCSR04_RiseEdgeTime>:
 136:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 13a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 13e:	fc 01       	movw	r30, r24
 140:	75 83       	std	Z+5, r23	; 0x05
 142:	64 83       	std	Z+4, r22	; 0x04
 144:	16 86       	std	Z+14, r1	; 0x0e
 146:	08 95       	ret

00000148 <HCSR04_FallEdgeTime>:
 148:	fc 01       	movw	r30, r24
 14a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 14e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 152:	77 83       	std	Z+7, r23	; 0x07
 154:	66 83       	std	Z+6, r22	; 0x06
 156:	86 85       	ldd	r24, Z+14	; 0x0e
 158:	81 60       	ori	r24, 0x01	; 1
 15a:	86 87       	std	Z+14, r24	; 0x0e
 15c:	08 95       	ret

0000015e <task_HCSR>:
 15e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 162:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__data_end+0x1>
 166:	30 97       	sbiw	r30, 0x00	; 0
 168:	11 f1       	breq	.+68     	; 0x1ae <task_HCSR+0x50>
 16a:	86 85       	ldd	r24, Z+14	; 0x0e
 16c:	80 ff       	sbrs	r24, 0
 16e:	1f c0       	rjmp	.+62     	; 0x1ae <task_HCSR+0x50>
 170:	16 86       	std	Z+14, r1	; 0x0e
 172:	24 81       	ldd	r18, Z+4	; 0x04
 174:	35 81       	ldd	r19, Z+5	; 0x05
 176:	86 81       	ldd	r24, Z+6	; 0x06
 178:	97 81       	ldd	r25, Z+7	; 0x07
 17a:	28 17       	cp	r18, r24
 17c:	39 07       	cpc	r19, r25
 17e:	28 f4       	brcc	.+10     	; 0x18a <task_HCSR+0x2c>
 180:	82 1b       	sub	r24, r18
 182:	93 0b       	sbc	r25, r19
 184:	91 87       	std	Z+9, r25	; 0x09
 186:	80 87       	std	Z+8, r24	; 0x08
 188:	05 c0       	rjmp	.+10     	; 0x194 <task_HCSR+0x36>
 18a:	82 1b       	sub	r24, r18
 18c:	93 0b       	sbc	r25, r19
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	91 87       	std	Z+9, r25	; 0x09
 192:	80 87       	std	Z+8, r24	; 0x08
 194:	80 85       	ldd	r24, Z+8	; 0x08
 196:	91 85       	ldd	r25, Z+9	; 0x09
 198:	85 3f       	cpi	r24, 0xF5	; 245
 19a:	9d 42       	sbci	r25, 0x2D	; 45
 19c:	20 f0       	brcs	.+8      	; 0x1a6 <task_HCSR+0x48>
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	9f ef       	ldi	r25, 0xFF	; 255
 1a2:	91 87       	std	Z+9, r25	; 0x09
 1a4:	80 87       	std	Z+8, r24	; 0x08
 1a6:	80 85       	ldd	r24, Z+8	; 0x08
 1a8:	91 85       	ldd	r25, Z+9	; 0x09
 1aa:	0e 94 61 04 	call	0x8c2	; 0x8c2 <sensorMeasure>
 1ae:	08 95       	ret

000001b0 <WritePin_HCSR>:
			}
		}
	}
	
	
}
 1b0:	88 23       	and	r24, r24
 1b2:	21 f0       	breq	.+8      	; 0x1bc <WritePin_HCSR+0xc>
 1b4:	85 b1       	in	r24, 0x05	; 5
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	85 b9       	out	0x05, r24	; 5
 1ba:	08 95       	ret
 1bc:	85 b1       	in	r24, 0x05	; 5
 1be:	8d 7f       	andi	r24, 0xFD	; 253
 1c0:	85 b9       	out	0x05, r24	; 5
 1c2:	08 95       	ret

000001c4 <__vector_11>:
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	8f 93       	push	r24
 1d0:	9f 93       	push	r25
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
 1d6:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 1da:	81 60       	ori	r24, 0x01	; 1
 1dc:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <flag0>
 1e0:	e8 e8       	ldi	r30, 0x88	; 136
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	91 81       	ldd	r25, Z+1	; 0x01
 1e8:	81 5e       	subi	r24, 0xE1	; 225
 1ea:	91 4b       	sbci	r25, 0xB1	; 177
 1ec:	91 83       	std	Z+1, r25	; 0x01
 1ee:	80 83       	st	Z, r24
 1f0:	ff 91       	pop	r31
 1f2:	ef 91       	pop	r30
 1f4:	9f 91       	pop	r25
 1f6:	8f 91       	pop	r24
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <__vector_12>:
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	2f 93       	push	r18
 20e:	3f 93       	push	r19
 210:	4f 93       	push	r20
 212:	5f 93       	push	r21
 214:	6f 93       	push	r22
 216:	7f 93       	push	r23
 218:	8f 93       	push	r24
 21a:	9f 93       	push	r25
 21c:	af 93       	push	r26
 21e:	bf 93       	push	r27
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
 224:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <HCSR_1>
 228:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <HCSR_1+0x1>
 22c:	0e 94 91 00 	call	0x122	; 0x122 <HCSR04_TriggerReady>
 230:	86 b3       	in	r24, 0x16	; 22
 232:	80 62       	ori	r24, 0x20	; 32
 234:	86 bb       	out	0x16, r24	; 22
 236:	e1 e8       	ldi	r30, 0x81	; 129
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 ec       	ldi	r24, 0xC0	; 192
 23c:	80 83       	st	Z, r24
 23e:	80 81       	ld	r24, Z
 240:	82 60       	ori	r24, 0x02	; 2
 242:	80 83       	st	Z, r24
 244:	82 e2       	ldi	r24, 0x22	; 34
 246:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 24a:	ff 91       	pop	r31
 24c:	ef 91       	pop	r30
 24e:	bf 91       	pop	r27
 250:	af 91       	pop	r26
 252:	9f 91       	pop	r25
 254:	8f 91       	pop	r24
 256:	7f 91       	pop	r23
 258:	6f 91       	pop	r22
 25a:	5f 91       	pop	r21
 25c:	4f 91       	pop	r20
 25e:	3f 91       	pop	r19
 260:	2f 91       	pop	r18
 262:	0f 90       	pop	r0
 264:	0f be       	out	0x3f, r0	; 63
 266:	0f 90       	pop	r0
 268:	1f 90       	pop	r1
 26a:	18 95       	reti

0000026c <__vector_10>:
 26c:	1f 92       	push	r1
 26e:	0f 92       	push	r0
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	0f 92       	push	r0
 274:	11 24       	eor	r1, r1
 276:	2f 93       	push	r18
 278:	3f 93       	push	r19
 27a:	4f 93       	push	r20
 27c:	5f 93       	push	r21
 27e:	6f 93       	push	r22
 280:	7f 93       	push	r23
 282:	8f 93       	push	r24
 284:	9f 93       	push	r25
 286:	af 93       	push	r26
 288:	bf 93       	push	r27
 28a:	ef 93       	push	r30
 28c:	ff 93       	push	r31
 28e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 292:	86 ff       	sbrs	r24, 6
 294:	10 c0       	rjmp	.+32     	; 0x2b6 <__vector_10+0x4a>
 296:	82 e8       	ldi	r24, 0x82	; 130
 298:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 29c:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 2a0:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 2a4:	76 95       	lsr	r23
 2a6:	67 95       	ror	r22
 2a8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <HCSR_1>
 2ac:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <HCSR_1+0x1>
 2b0:	0e 94 9b 00 	call	0x136	; 0x136 <HCSR04_RiseEdgeTime>
 2b4:	11 c0       	rjmp	.+34     	; 0x2d8 <__vector_10+0x6c>
 2b6:	ef e6       	ldi	r30, 0x6F	; 111
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	8f 7d       	andi	r24, 0xDF	; 223
 2be:	80 83       	st	Z, r24
 2c0:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 2c4:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 2c8:	76 95       	lsr	r23
 2ca:	67 95       	ror	r22
 2cc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <HCSR_1>
 2d0:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <HCSR_1+0x1>
 2d4:	0e 94 a4 00 	call	0x148	; 0x148 <HCSR04_FallEdgeTime>
 2d8:	ff 91       	pop	r31
 2da:	ef 91       	pop	r30
 2dc:	bf 91       	pop	r27
 2de:	af 91       	pop	r26
 2e0:	9f 91       	pop	r25
 2e2:	8f 91       	pop	r24
 2e4:	7f 91       	pop	r23
 2e6:	6f 91       	pop	r22
 2e8:	5f 91       	pop	r21
 2ea:	4f 91       	pop	r20
 2ec:	3f 91       	pop	r19
 2ee:	2f 91       	pop	r18
 2f0:	0f 90       	pop	r0
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	0f 90       	pop	r0
 2f6:	1f 90       	pop	r1
 2f8:	18 95       	reti

000002fa <__vector_16>:
 2fa:	1f 92       	push	r1
 2fc:	0f 92       	push	r0
 2fe:	0f b6       	in	r0, 0x3f	; 63
 300:	0f 92       	push	r0
 302:	11 24       	eor	r1, r1
 304:	2f 93       	push	r18
 306:	3f 93       	push	r19
 308:	4f 93       	push	r20
 30a:	5f 93       	push	r21
 30c:	6f 93       	push	r22
 30e:	7f 93       	push	r23
 310:	8f 93       	push	r24
 312:	9f 93       	push	r25
 314:	af 93       	push	r26
 316:	bf 93       	push	r27
 318:	ef 93       	push	r30
 31a:	ff 93       	push	r31
 31c:	0e 94 ed 05 	call	0xbda	; 0xbda <writeServo>
 320:	ff 91       	pop	r31
 322:	ef 91       	pop	r30
 324:	bf 91       	pop	r27
 326:	af 91       	pop	r26
 328:	9f 91       	pop	r25
 32a:	8f 91       	pop	r24
 32c:	7f 91       	pop	r23
 32e:	6f 91       	pop	r22
 330:	5f 91       	pop	r21
 332:	4f 91       	pop	r20
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	0f 90       	pop	r0
 33e:	1f 90       	pop	r1
 340:	18 95       	reti

00000342 <__vector_18>:
 342:	1f 92       	push	r1
 344:	0f 92       	push	r0
 346:	0f b6       	in	r0, 0x3f	; 63
 348:	0f 92       	push	r0
 34a:	11 24       	eor	r1, r1
 34c:	8f 93       	push	r24
 34e:	9f 93       	push	r25
 350:	af 93       	push	r26
 352:	bf 93       	push	r27
 354:	ef 93       	push	r30
 356:	ff 93       	push	r31
 358:	e2 e3       	ldi	r30, 0x32	; 50
 35a:	f2 e0       	ldi	r31, 0x02	; 2
 35c:	a0 81       	ld	r26, Z
 35e:	b1 81       	ldd	r27, Z+1	; 0x01
 360:	83 81       	ldd	r24, Z+3	; 0x03
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	98 0f       	add	r25, r24
 366:	93 83       	std	Z+3, r25	; 0x03
 368:	a8 0f       	add	r26, r24
 36a:	b1 1d       	adc	r27, r1
 36c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 370:	8c 93       	st	X, r24
 372:	85 81       	ldd	r24, Z+5	; 0x05
 374:	93 81       	ldd	r25, Z+3	; 0x03
 376:	89 23       	and	r24, r25
 378:	83 83       	std	Z+3, r24	; 0x03
 37a:	ff 91       	pop	r31
 37c:	ef 91       	pop	r30
 37e:	bf 91       	pop	r27
 380:	af 91       	pop	r26
 382:	9f 91       	pop	r25
 384:	8f 91       	pop	r24
 386:	0f 90       	pop	r0
 388:	0f be       	out	0x3f, r0	; 63
 38a:	0f 90       	pop	r0
 38c:	1f 90       	pop	r1
 38e:	18 95       	reti

00000390 <ini_ports>:
 390:	8e e3       	ldi	r24, 0x3E	; 62
 392:	84 b9       	out	0x04, r24	; 4
 394:	80 ec       	ldi	r24, 0xC0	; 192
 396:	8a b9       	out	0x0a, r24	; 10
 398:	84 b1       	in	r24, 0x04	; 4
 39a:	8e 7f       	andi	r24, 0xFE	; 254
 39c:	84 b9       	out	0x04, r24	; 4
 39e:	8a b1       	in	r24, 0x0a	; 10
 3a0:	83 7c       	andi	r24, 0xC3	; 195
 3a2:	8a b9       	out	0x0a, r24	; 10
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	85 b9       	out	0x05, r24	; 5
 3a8:	8c e3       	ldi	r24, 0x3C	; 60
 3aa:	8b b9       	out	0x0b, r24	; 11
 3ac:	08 95       	ret

000003ae <ini_timer1>:
 3ae:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 3b2:	82 ec       	ldi	r24, 0xC2	; 194
 3b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 3b8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 3bc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 3c0:	82 e0       	ldi	r24, 0x02	; 2
 3c2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 3c6:	8f e1       	ldi	r24, 0x1F	; 31
 3c8:	9e e4       	ldi	r25, 0x4E	; 78
 3ca:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 3ce:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 3d2:	86 b3       	in	r24, 0x16	; 22
 3d4:	86 bb       	out	0x16, r24	; 22
 3d6:	08 95       	ret

000003d8 <ini_timer0>:
 3d8:	14 bc       	out	0x24, r1	; 36
 3da:	16 bc       	out	0x26, r1	; 38
 3dc:	87 e0       	ldi	r24, 0x07	; 7
 3de:	85 bb       	out	0x15, r24	; 21
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	85 bd       	out	0x25, r24	; 37
 3ea:	08 95       	ret

000003ec <ini_USART>:
 3ec:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 3f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 3f4:	8e ef       	ldi	r24, 0xFE	; 254
 3f6:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 3fa:	88 e9       	ldi	r24, 0x98	; 152
 3fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 400:	86 e0       	ldi	r24, 0x06	; 6
 402:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 406:	08 95       	ret

00000408 <IR_Init>:
 408:	ac 01       	movw	r20, r24
 40a:	20 e0       	ldi	r18, 0x00	; 0
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	0d c0       	rjmp	.+26     	; 0x42a <IR_Init+0x22>
 410:	f9 01       	movw	r30, r18
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	e4 0f       	add	r30, r20
 41c:	f5 1f       	adc	r31, r21
 41e:	91 e0       	ldi	r25, 0x01	; 1
 420:	90 83       	st	Z, r25
 422:	92 83       	std	Z+2, r25	; 0x02
 424:	11 82       	std	Z+1, r1	; 0x01
 426:	2f 5f       	subi	r18, 0xFF	; 255
 428:	3f 4f       	sbci	r19, 0xFF	; 255
 42a:	24 30       	cpi	r18, 0x04	; 4
 42c:	31 05       	cpc	r19, r1
 42e:	84 f3       	brlt	.-32     	; 0x410 <IR_Init+0x8>
 430:	08 95       	ret

00000432 <IR_Update>:
 432:	fc 01       	movw	r30, r24
 434:	80 81       	ld	r24, Z
 436:	81 30       	cpi	r24, 0x01	; 1
 438:	89 f0       	breq	.+34     	; 0x45c <IR_Update+0x2a>
 43a:	28 f0       	brcs	.+10     	; 0x446 <IR_Update+0x14>
 43c:	82 30       	cpi	r24, 0x02	; 2
 43e:	b1 f0       	breq	.+44     	; 0x46c <IR_Update+0x3a>
 440:	83 30       	cpi	r24, 0x03	; 3
 442:	01 f1       	breq	.+64     	; 0x484 <IR_Update+0x52>
 444:	26 c0       	rjmp	.+76     	; 0x492 <IR_Update+0x60>
 446:	61 30       	cpi	r22, 0x01	; 1
 448:	31 f4       	brne	.+12     	; 0x456 <IR_Update+0x24>
 44a:	82 81       	ldd	r24, Z+2	; 0x02
 44c:	81 30       	cpi	r24, 0x01	; 1
 44e:	19 f4       	brne	.+6      	; 0x456 <IR_Update+0x24>
 450:	80 83       	st	Z, r24
 452:	81 83       	std	Z+1, r24	; 0x01
 454:	20 c0       	rjmp	.+64     	; 0x496 <IR_Update+0x64>
 456:	83 e0       	ldi	r24, 0x03	; 3
 458:	80 83       	st	Z, r24
 45a:	1d c0       	rjmp	.+58     	; 0x496 <IR_Update+0x64>
 45c:	61 11       	cpse	r22, r1
 45e:	03 c0       	rjmp	.+6      	; 0x466 <IR_Update+0x34>
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	80 83       	st	Z, r24
 464:	18 c0       	rjmp	.+48     	; 0x496 <IR_Update+0x64>
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	80 83       	st	Z, r24
 46a:	15 c0       	rjmp	.+42     	; 0x496 <IR_Update+0x64>
 46c:	61 11       	cpse	r22, r1
 46e:	07 c0       	rjmp	.+14     	; 0x47e <IR_Update+0x4c>
 470:	82 81       	ldd	r24, Z+2	; 0x02
 472:	81 11       	cpse	r24, r1
 474:	04 c0       	rjmp	.+8      	; 0x47e <IR_Update+0x4c>
 476:	83 e0       	ldi	r24, 0x03	; 3
 478:	80 83       	st	Z, r24
 47a:	11 82       	std	Z+1, r1	; 0x01
 47c:	0c c0       	rjmp	.+24     	; 0x496 <IR_Update+0x64>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	80 83       	st	Z, r24
 482:	09 c0       	rjmp	.+18     	; 0x496 <IR_Update+0x64>
 484:	61 30       	cpi	r22, 0x01	; 1
 486:	11 f4       	brne	.+4      	; 0x48c <IR_Update+0x5a>
 488:	10 82       	st	Z, r1
 48a:	05 c0       	rjmp	.+10     	; 0x496 <IR_Update+0x64>
 48c:	83 e0       	ldi	r24, 0x03	; 3
 48e:	80 83       	st	Z, r24
 490:	02 c0       	rjmp	.+4      	; 0x496 <IR_Update+0x64>
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	80 83       	st	Z, r24
 496:	62 83       	std	Z+2, r22	; 0x02
 498:	08 95       	ret

0000049a <IR_GetState>:
 49a:	fc 01       	movw	r30, r24
 49c:	81 81       	ldd	r24, Z+1	; 0x01
 49e:	08 95       	ret

000004a0 <putHeaderOnTx>:
 4a0:	fc 01       	movw	r30, r24
 4a2:	15 82       	std	Z+5, r1	; 0x05
 4a4:	a0 81       	ld	r26, Z
 4a6:	b1 81       	ldd	r27, Z+1	; 0x01
 4a8:	83 81       	ldd	r24, Z+3	; 0x03
 4aa:	91 e0       	ldi	r25, 0x01	; 1
 4ac:	98 0f       	add	r25, r24
 4ae:	93 83       	std	Z+3, r25	; 0x03
 4b0:	a8 0f       	add	r26, r24
 4b2:	b1 1d       	adc	r27, r1
 4b4:	85 e5       	ldi	r24, 0x55	; 85
 4b6:	8c 93       	st	X, r24
 4b8:	84 81       	ldd	r24, Z+4	; 0x04
 4ba:	93 81       	ldd	r25, Z+3	; 0x03
 4bc:	98 23       	and	r25, r24
 4be:	a0 81       	ld	r26, Z
 4c0:	b1 81       	ldd	r27, Z+1	; 0x01
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	89 0f       	add	r24, r25
 4c6:	83 83       	std	Z+3, r24	; 0x03
 4c8:	a9 0f       	add	r26, r25
 4ca:	b1 1d       	adc	r27, r1
 4cc:	8e e4       	ldi	r24, 0x4E	; 78
 4ce:	8c 93       	st	X, r24
 4d0:	84 81       	ldd	r24, Z+4	; 0x04
 4d2:	93 81       	ldd	r25, Z+3	; 0x03
 4d4:	98 23       	and	r25, r24
 4d6:	a0 81       	ld	r26, Z
 4d8:	b1 81       	ldd	r27, Z+1	; 0x01
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	89 0f       	add	r24, r25
 4de:	83 83       	std	Z+3, r24	; 0x03
 4e0:	a9 0f       	add	r26, r25
 4e2:	b1 1d       	adc	r27, r1
 4e4:	85 e4       	ldi	r24, 0x45	; 69
 4e6:	8c 93       	st	X, r24
 4e8:	84 81       	ldd	r24, Z+4	; 0x04
 4ea:	93 81       	ldd	r25, Z+3	; 0x03
 4ec:	98 23       	and	r25, r24
 4ee:	a0 81       	ld	r26, Z
 4f0:	b1 81       	ldd	r27, Z+1	; 0x01
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	89 0f       	add	r24, r25
 4f6:	83 83       	std	Z+3, r24	; 0x03
 4f8:	a9 0f       	add	r26, r25
 4fa:	b1 1d       	adc	r27, r1
 4fc:	82 e5       	ldi	r24, 0x52	; 82
 4fe:	8c 93       	st	X, r24
 500:	84 81       	ldd	r24, Z+4	; 0x04
 502:	93 81       	ldd	r25, Z+3	; 0x03
 504:	98 23       	and	r25, r24
 506:	a0 81       	ld	r26, Z
 508:	b1 81       	ldd	r27, Z+1	; 0x01
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	89 0f       	add	r24, r25
 50e:	83 83       	std	Z+3, r24	; 0x03
 510:	a9 0f       	add	r26, r25
 512:	b1 1d       	adc	r27, r1
 514:	4f 5f       	subi	r20, 0xFF	; 255
 516:	4c 93       	st	X, r20
 518:	84 81       	ldd	r24, Z+4	; 0x04
 51a:	93 81       	ldd	r25, Z+3	; 0x03
 51c:	98 23       	and	r25, r24
 51e:	a0 81       	ld	r26, Z
 520:	b1 81       	ldd	r27, Z+1	; 0x01
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	89 0f       	add	r24, r25
 526:	83 83       	std	Z+3, r24	; 0x03
 528:	a9 0f       	add	r26, r25
 52a:	b1 1d       	adc	r27, r1
 52c:	8a e3       	ldi	r24, 0x3A	; 58
 52e:	8c 93       	st	X, r24
 530:	84 81       	ldd	r24, Z+4	; 0x04
 532:	93 81       	ldd	r25, Z+3	; 0x03
 534:	98 23       	and	r25, r24
 536:	a0 81       	ld	r26, Z
 538:	b1 81       	ldd	r27, Z+1	; 0x01
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	89 0f       	add	r24, r25
 53e:	83 83       	std	Z+3, r24	; 0x03
 540:	a9 0f       	add	r26, r25
 542:	b1 1d       	adc	r27, r1
 544:	6c 93       	st	X, r22
 546:	94 81       	ldd	r25, Z+4	; 0x04
 548:	83 81       	ldd	r24, Z+3	; 0x03
 54a:	98 23       	and	r25, r24
 54c:	93 83       	std	Z+3, r25	; 0x03
 54e:	95 81       	ldd	r25, Z+5	; 0x05
 550:	49 27       	eor	r20, r25
 552:	64 27       	eor	r22, r20
 554:	86 e3       	ldi	r24, 0x36	; 54
 556:	86 27       	eor	r24, r22
 558:	85 83       	std	Z+5, r24	; 0x05
 55a:	08 95       	ret

0000055c <putByteOnTx>:
 55c:	fc 01       	movw	r30, r24
 55e:	a0 81       	ld	r26, Z
 560:	b1 81       	ldd	r27, Z+1	; 0x01
 562:	83 81       	ldd	r24, Z+3	; 0x03
 564:	91 e0       	ldi	r25, 0x01	; 1
 566:	98 0f       	add	r25, r24
 568:	93 83       	std	Z+3, r25	; 0x03
 56a:	a8 0f       	add	r26, r24
 56c:	b1 1d       	adc	r27, r1
 56e:	6c 93       	st	X, r22
 570:	94 81       	ldd	r25, Z+4	; 0x04
 572:	83 81       	ldd	r24, Z+3	; 0x03
 574:	98 23       	and	r25, r24
 576:	93 83       	std	Z+3, r25	; 0x03
 578:	85 81       	ldd	r24, Z+5	; 0x05
 57a:	86 27       	eor	r24, r22
 57c:	85 83       	std	Z+5, r24	; 0x05
 57e:	08 95       	ret

00000580 <decodeCommand>:
 580:	0f 93       	push	r16
 582:	1f 93       	push	r17
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	eb 01       	movw	r28, r22
 58a:	dc 01       	movw	r26, r24
 58c:	ed 91       	ld	r30, X+
 58e:	fc 91       	ld	r31, X
 590:	11 97       	sbiw	r26, 0x01	; 1
 592:	14 96       	adiw	r26, 0x04	; 4
 594:	8c 91       	ld	r24, X
 596:	e8 0f       	add	r30, r24
 598:	f1 1d       	adc	r31, r1
 59a:	60 81       	ld	r22, Z
 59c:	68 3a       	cpi	r22, 0xA8	; 168
 59e:	70 f4       	brcc	.+28     	; 0x5bc <decodeCommand+0x3c>
 5a0:	64 3a       	cpi	r22, 0xA4	; 164
 5a2:	08 f0       	brcs	.+2      	; 0x5a6 <decodeCommand+0x26>
 5a4:	84 c0       	rjmp	.+264    	; 0x6ae <decodeCommand+0x12e>
 5a6:	63 3a       	cpi	r22, 0xA3	; 163
 5a8:	e0 f5       	brcc	.+120    	; 0x622 <decodeCommand+0xa2>
 5aa:	60 3a       	cpi	r22, 0xA0	; 160
 5ac:	08 f0       	brcs	.+2      	; 0x5b0 <decodeCommand+0x30>
 5ae:	7f c0       	rjmp	.+254    	; 0x6ae <decodeCommand+0x12e>
 5b0:	60 31       	cpi	r22, 0x10	; 16
 5b2:	01 f1       	breq	.+64     	; 0x5f4 <decodeCommand+0x74>
 5b4:	62 31       	cpi	r22, 0x12	; 18
 5b6:	09 f0       	breq	.+2      	; 0x5ba <decodeCommand+0x3a>
 5b8:	6e c0       	rjmp	.+220    	; 0x696 <decodeCommand+0x116>
 5ba:	79 c0       	rjmp	.+242    	; 0x6ae <decodeCommand+0x12e>
 5bc:	6e 3d       	cpi	r22, 0xDE	; 222
 5be:	09 f4       	brne	.+2      	; 0x5c2 <decodeCommand+0x42>
 5c0:	76 c0       	rjmp	.+236    	; 0x6ae <decodeCommand+0x12e>
 5c2:	20 f4       	brcc	.+8      	; 0x5cc <decodeCommand+0x4c>
 5c4:	6a 3a       	cpi	r22, 0xAA	; 170
 5c6:	09 f4       	brne	.+2      	; 0x5ca <decodeCommand+0x4a>
 5c8:	43 c0       	rjmp	.+134    	; 0x650 <decodeCommand+0xd0>
 5ca:	65 c0       	rjmp	.+202    	; 0x696 <decodeCommand+0x116>
 5cc:	60 3f       	cpi	r22, 0xF0	; 240
 5ce:	21 f0       	breq	.+8      	; 0x5d8 <decodeCommand+0x58>
 5d0:	61 3f       	cpi	r22, 0xF1	; 241
 5d2:	09 f0       	breq	.+2      	; 0x5d6 <decodeCommand+0x56>
 5d4:	60 c0       	rjmp	.+192    	; 0x696 <decodeCommand+0x116>
 5d6:	6b c0       	rjmp	.+214    	; 0x6ae <decodeCommand+0x12e>
 5d8:	42 e0       	ldi	r20, 0x02	; 2
 5da:	60 ef       	ldi	r22, 0xF0	; 240
 5dc:	ce 01       	movw	r24, r28
 5de:	0e 94 50 02 	call	0x4a0	; 0x4a0 <putHeaderOnTx>
 5e2:	6d e0       	ldi	r22, 0x0D	; 13
 5e4:	ce 01       	movw	r24, r28
 5e6:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 5ea:	6d 81       	ldd	r22, Y+5	; 0x05
 5ec:	ce 01       	movw	r24, r28
 5ee:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 5f2:	5d c0       	rjmp	.+186    	; 0x6ae <decodeCommand+0x12e>
 5f4:	43 e0       	ldi	r20, 0x03	; 3
 5f6:	60 e1       	ldi	r22, 0x10	; 16
 5f8:	ce 01       	movw	r24, r28
 5fa:	0e 94 50 02 	call	0x4a0	; 0x4a0 <putHeaderOnTx>
 5fe:	08 e4       	ldi	r16, 0x48	; 72
 600:	12 e0       	ldi	r17, 0x02	; 2
 602:	f8 01       	movw	r30, r16
 604:	60 81       	ld	r22, Z
 606:	ce 01       	movw	r24, r28
 608:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 60c:	d8 01       	movw	r26, r16
 60e:	11 96       	adiw	r26, 0x01	; 1
 610:	6c 91       	ld	r22, X
 612:	ce 01       	movw	r24, r28
 614:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 618:	6d 81       	ldd	r22, Y+5	; 0x05
 61a:	ce 01       	movw	r24, r28
 61c:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 620:	46 c0       	rjmp	.+140    	; 0x6ae <decodeCommand+0x12e>
 622:	43 e0       	ldi	r20, 0x03	; 3
 624:	63 ea       	ldi	r22, 0xA3	; 163
 626:	ce 01       	movw	r24, r28
 628:	0e 94 50 02 	call	0x4a0	; 0x4a0 <putHeaderOnTx>
 62c:	08 e4       	ldi	r16, 0x48	; 72
 62e:	12 e0       	ldi	r17, 0x02	; 2
 630:	f8 01       	movw	r30, r16
 632:	60 81       	ld	r22, Z
 634:	ce 01       	movw	r24, r28
 636:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 63a:	d8 01       	movw	r26, r16
 63c:	11 96       	adiw	r26, 0x01	; 1
 63e:	6c 91       	ld	r22, X
 640:	ce 01       	movw	r24, r28
 642:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 646:	6d 81       	ldd	r22, Y+5	; 0x05
 648:	ce 01       	movw	r24, r28
 64a:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 64e:	2f c0       	rjmp	.+94     	; 0x6ae <decodeCommand+0x12e>
 650:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <Numbox>
 654:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <Numbox+0x1>
 658:	ee 0f       	add	r30, r30
 65a:	ff 1f       	adc	r31, r31
 65c:	e4 5a       	subi	r30, 0xA4	; 164
 65e:	fc 4f       	sbci	r31, 0xFC	; 252
 660:	80 81       	ld	r24, Z
 662:	08 e4       	ldi	r16, 0x48	; 72
 664:	12 e0       	ldi	r17, 0x02	; 2
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	f8 01       	movw	r30, r16
 66a:	91 83       	std	Z+1, r25	; 0x01
 66c:	80 83       	st	Z, r24
 66e:	43 e0       	ldi	r20, 0x03	; 3
 670:	6a ea       	ldi	r22, 0xAA	; 170
 672:	ce 01       	movw	r24, r28
 674:	0e 94 50 02 	call	0x4a0	; 0x4a0 <putHeaderOnTx>
 678:	d8 01       	movw	r26, r16
 67a:	6c 91       	ld	r22, X
 67c:	ce 01       	movw	r24, r28
 67e:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 682:	f8 01       	movw	r30, r16
 684:	61 81       	ldd	r22, Z+1	; 0x01
 686:	ce 01       	movw	r24, r28
 688:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 68c:	6d 81       	ldd	r22, Y+5	; 0x05
 68e:	ce 01       	movw	r24, r28
 690:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 694:	0c c0       	rjmp	.+24     	; 0x6ae <decodeCommand+0x12e>
 696:	42 e0       	ldi	r20, 0x02	; 2
 698:	ce 01       	movw	r24, r28
 69a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <putHeaderOnTx>
 69e:	6f ef       	ldi	r22, 0xFF	; 255
 6a0:	ce 01       	movw	r24, r28
 6a2:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 6a6:	6d 81       	ldd	r22, Y+5	; 0x05
 6a8:	ce 01       	movw	r24, r28
 6aa:	0e 94 ae 02 	call	0x55c	; 0x55c <putByteOnTx>
 6ae:	df 91       	pop	r29
 6b0:	cf 91       	pop	r28
 6b2:	1f 91       	pop	r17
 6b4:	0f 91       	pop	r16
 6b6:	08 95       	ret

000006b8 <decodeHeader>:
 6b8:	dc 01       	movw	r26, r24
 6ba:	13 96       	adiw	r26, 0x03	; 3
 6bc:	2c 91       	ld	r18, X
 6be:	13 97       	sbiw	r26, 0x03	; 3
 6c0:	c9 c0       	rjmp	.+402    	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 6c2:	18 96       	adiw	r26, 0x08	; 8
 6c4:	ec 91       	ld	r30, X
 6c6:	18 97       	sbiw	r26, 0x08	; 8
 6c8:	4e 2f       	mov	r20, r30
 6ca:	50 e0       	ldi	r21, 0x00	; 0
 6cc:	47 30       	cpi	r20, 0x07	; 7
 6ce:	51 05       	cpc	r21, r1
 6d0:	08 f0       	brcs	.+2      	; 0x6d4 <decodeHeader+0x1c>
 6d2:	b2 c0       	rjmp	.+356    	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 6d4:	fa 01       	movw	r30, r20
 6d6:	ec 5c       	subi	r30, 0xCC	; 204
 6d8:	ff 4f       	sbci	r31, 0xFF	; 255
 6da:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__tablejump2__>
 6de:	ed 91       	ld	r30, X+
 6e0:	fc 91       	ld	r31, X
 6e2:	11 97       	sbiw	r26, 0x01	; 1
 6e4:	e8 0f       	add	r30, r24
 6e6:	f1 1d       	adc	r31, r1
 6e8:	80 81       	ld	r24, Z
 6ea:	85 35       	cpi	r24, 0x55	; 85
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <decodeHeader+0x38>
 6ee:	a7 c0       	rjmp	.+334    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	18 96       	adiw	r26, 0x08	; 8
 6f4:	8c 93       	st	X, r24
 6f6:	18 97       	sbiw	r26, 0x08	; 8
 6f8:	a2 c0       	rjmp	.+324    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 6fa:	ed 91       	ld	r30, X+
 6fc:	fc 91       	ld	r31, X
 6fe:	11 97       	sbiw	r26, 0x01	; 1
 700:	e8 0f       	add	r30, r24
 702:	f1 1d       	adc	r31, r1
 704:	90 81       	ld	r25, Z
 706:	9e 34       	cpi	r25, 0x4E	; 78
 708:	29 f4       	brne	.+10     	; 0x714 <decodeHeader+0x5c>
 70a:	82 e0       	ldi	r24, 0x02	; 2
 70c:	18 96       	adiw	r26, 0x08	; 8
 70e:	8c 93       	st	X, r24
 710:	18 97       	sbiw	r26, 0x08	; 8
 712:	95 c0       	rjmp	.+298    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 714:	95 35       	cpi	r25, 0x55	; 85
 716:	09 f4       	brne	.+2      	; 0x71a <decodeHeader+0x62>
 718:	92 c0       	rjmp	.+292    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 71a:	18 96       	adiw	r26, 0x08	; 8
 71c:	1c 92       	st	X, r1
 71e:	18 97       	sbiw	r26, 0x08	; 8
 720:	81 50       	subi	r24, 0x01	; 1
 722:	12 96       	adiw	r26, 0x02	; 2
 724:	8c 93       	st	X, r24
 726:	12 97       	sbiw	r26, 0x02	; 2
 728:	8a c0       	rjmp	.+276    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 72a:	ed 91       	ld	r30, X+
 72c:	fc 91       	ld	r31, X
 72e:	11 97       	sbiw	r26, 0x01	; 1
 730:	e8 0f       	add	r30, r24
 732:	f1 1d       	adc	r31, r1
 734:	90 81       	ld	r25, Z
 736:	95 34       	cpi	r25, 0x45	; 69
 738:	29 f4       	brne	.+10     	; 0x744 <decodeHeader+0x8c>
 73a:	83 e0       	ldi	r24, 0x03	; 3
 73c:	18 96       	adiw	r26, 0x08	; 8
 73e:	8c 93       	st	X, r24
 740:	18 97       	sbiw	r26, 0x08	; 8
 742:	7d c0       	rjmp	.+250    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 744:	18 96       	adiw	r26, 0x08	; 8
 746:	1c 92       	st	X, r1
 748:	18 97       	sbiw	r26, 0x08	; 8
 74a:	81 50       	subi	r24, 0x01	; 1
 74c:	12 96       	adiw	r26, 0x02	; 2
 74e:	8c 93       	st	X, r24
 750:	12 97       	sbiw	r26, 0x02	; 2
 752:	75 c0       	rjmp	.+234    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 754:	ed 91       	ld	r30, X+
 756:	fc 91       	ld	r31, X
 758:	11 97       	sbiw	r26, 0x01	; 1
 75a:	e8 0f       	add	r30, r24
 75c:	f1 1d       	adc	r31, r1
 75e:	90 81       	ld	r25, Z
 760:	92 35       	cpi	r25, 0x52	; 82
 762:	29 f4       	brne	.+10     	; 0x76e <decodeHeader+0xb6>
 764:	84 e0       	ldi	r24, 0x04	; 4
 766:	18 96       	adiw	r26, 0x08	; 8
 768:	8c 93       	st	X, r24
 76a:	18 97       	sbiw	r26, 0x08	; 8
 76c:	68 c0       	rjmp	.+208    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 76e:	18 96       	adiw	r26, 0x08	; 8
 770:	1c 92       	st	X, r1
 772:	18 97       	sbiw	r26, 0x08	; 8
 774:	81 50       	subi	r24, 0x01	; 1
 776:	12 96       	adiw	r26, 0x02	; 2
 778:	8c 93       	st	X, r24
 77a:	12 97       	sbiw	r26, 0x02	; 2
 77c:	60 c0       	rjmp	.+192    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 77e:	ed 91       	ld	r30, X+
 780:	fc 91       	ld	r31, X
 782:	11 97       	sbiw	r26, 0x01	; 1
 784:	e8 0f       	add	r30, r24
 786:	f1 1d       	adc	r31, r1
 788:	80 81       	ld	r24, Z
 78a:	17 96       	adiw	r26, 0x07	; 7
 78c:	8c 93       	st	X, r24
 78e:	17 97       	sbiw	r26, 0x07	; 7
 790:	85 e0       	ldi	r24, 0x05	; 5
 792:	18 96       	adiw	r26, 0x08	; 8
 794:	8c 93       	st	X, r24
 796:	18 97       	sbiw	r26, 0x08	; 8
 798:	52 c0       	rjmp	.+164    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 79a:	ed 91       	ld	r30, X+
 79c:	fc 91       	ld	r31, X
 79e:	11 97       	sbiw	r26, 0x01	; 1
 7a0:	e8 0f       	add	r30, r24
 7a2:	f1 1d       	adc	r31, r1
 7a4:	90 81       	ld	r25, Z
 7a6:	9a 33       	cpi	r25, 0x3A	; 58
 7a8:	a9 f4       	brne	.+42     	; 0x7d4 <decodeHeader+0x11c>
 7aa:	96 e0       	ldi	r25, 0x06	; 6
 7ac:	18 96       	adiw	r26, 0x08	; 8
 7ae:	9c 93       	st	X, r25
 7b0:	18 97       	sbiw	r26, 0x08	; 8
 7b2:	8f 5f       	subi	r24, 0xFF	; 255
 7b4:	15 96       	adiw	r26, 0x05	; 5
 7b6:	9c 91       	ld	r25, X
 7b8:	15 97       	sbiw	r26, 0x05	; 5
 7ba:	89 23       	and	r24, r25
 7bc:	14 96       	adiw	r26, 0x04	; 4
 7be:	8c 93       	st	X, r24
 7c0:	14 97       	sbiw	r26, 0x04	; 4
 7c2:	17 96       	adiw	r26, 0x07	; 7
 7c4:	9c 91       	ld	r25, X
 7c6:	17 97       	sbiw	r26, 0x07	; 7
 7c8:	86 e3       	ldi	r24, 0x36	; 54
 7ca:	89 27       	eor	r24, r25
 7cc:	16 96       	adiw	r26, 0x06	; 6
 7ce:	8c 93       	st	X, r24
 7d0:	16 97       	sbiw	r26, 0x06	; 6
 7d2:	35 c0       	rjmp	.+106    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7d4:	18 96       	adiw	r26, 0x08	; 8
 7d6:	1c 92       	st	X, r1
 7d8:	18 97       	sbiw	r26, 0x08	; 8
 7da:	81 50       	subi	r24, 0x01	; 1
 7dc:	12 96       	adiw	r26, 0x02	; 2
 7de:	8c 93       	st	X, r24
 7e0:	12 97       	sbiw	r26, 0x02	; 2
 7e2:	2d c0       	rjmp	.+90     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 7e4:	17 96       	adiw	r26, 0x07	; 7
 7e6:	9c 91       	ld	r25, X
 7e8:	17 97       	sbiw	r26, 0x07	; 7
 7ea:	91 50       	subi	r25, 0x01	; 1
 7ec:	17 96       	adiw	r26, 0x07	; 7
 7ee:	9c 93       	st	X, r25
 7f0:	17 97       	sbiw	r26, 0x07	; 7
 7f2:	99 23       	and	r25, r25
 7f4:	71 f0       	breq	.+28     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7f6:	ed 91       	ld	r30, X+
 7f8:	fc 91       	ld	r31, X
 7fa:	11 97       	sbiw	r26, 0x01	; 1
 7fc:	e8 0f       	add	r30, r24
 7fe:	f1 1d       	adc	r31, r1
 800:	80 81       	ld	r24, Z
 802:	16 96       	adiw	r26, 0x06	; 6
 804:	9c 91       	ld	r25, X
 806:	16 97       	sbiw	r26, 0x06	; 6
 808:	89 27       	eor	r24, r25
 80a:	16 96       	adiw	r26, 0x06	; 6
 80c:	8c 93       	st	X, r24
 80e:	16 97       	sbiw	r26, 0x06	; 6
 810:	16 c0       	rjmp	.+44     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 812:	18 96       	adiw	r26, 0x08	; 8
 814:	1c 92       	st	X, r1
 816:	18 97       	sbiw	r26, 0x08	; 8
 818:	ed 91       	ld	r30, X+
 81a:	fc 91       	ld	r31, X
 81c:	11 97       	sbiw	r26, 0x01	; 1
 81e:	e8 0f       	add	r30, r24
 820:	f1 1d       	adc	r31, r1
 822:	90 81       	ld	r25, Z
 824:	16 96       	adiw	r26, 0x06	; 6
 826:	8c 91       	ld	r24, X
 828:	16 97       	sbiw	r26, 0x06	; 6
 82a:	98 13       	cpse	r25, r24
 82c:	08 c0       	rjmp	.+16     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	1a 96       	adiw	r26, 0x0a	; 10
 832:	8c 93       	st	X, r24
 834:	1a 97       	sbiw	r26, 0x0a	; 10
 836:	03 c0       	rjmp	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 838:	18 96       	adiw	r26, 0x08	; 8
 83a:	1c 92       	st	X, r1
 83c:	18 97       	sbiw	r26, 0x08	; 8
 83e:	12 96       	adiw	r26, 0x02	; 2
 840:	8c 91       	ld	r24, X
 842:	12 97       	sbiw	r26, 0x02	; 2
 844:	8f 5f       	subi	r24, 0xFF	; 255
 846:	15 96       	adiw	r26, 0x05	; 5
 848:	9c 91       	ld	r25, X
 84a:	15 97       	sbiw	r26, 0x05	; 5
 84c:	89 23       	and	r24, r25
 84e:	12 96       	adiw	r26, 0x02	; 2
 850:	8c 93       	st	X, r24
 852:	12 97       	sbiw	r26, 0x02	; 2
 854:	12 96       	adiw	r26, 0x02	; 2
 856:	8c 91       	ld	r24, X
 858:	12 97       	sbiw	r26, 0x02	; 2
 85a:	28 13       	cpse	r18, r24
 85c:	32 cf       	rjmp	.-412    	; 0x6c2 <decodeHeader+0xa>
 85e:	08 95       	ret

00000860 <serialTask>:
 860:	0f 93       	push	r16
 862:	1f 93       	push	r17
 864:	cf 93       	push	r28
 866:	df 93       	push	r29
 868:	8c 01       	movw	r16, r24
 86a:	eb 01       	movw	r28, r22
 86c:	fc 01       	movw	r30, r24
 86e:	82 85       	ldd	r24, Z+10	; 0x0a
 870:	88 23       	and	r24, r24
 872:	21 f0       	breq	.+8      	; 0x87c <serialTask+0x1c>
 874:	12 86       	std	Z+10, r1	; 0x0a
 876:	c8 01       	movw	r24, r16
 878:	0e 94 c0 02 	call	0x580	; 0x580 <decodeCommand>
 87c:	f8 01       	movw	r30, r16
 87e:	92 81       	ldd	r25, Z+2	; 0x02
 880:	83 81       	ldd	r24, Z+3	; 0x03
 882:	98 17       	cp	r25, r24
 884:	19 f0       	breq	.+6      	; 0x88c <serialTask+0x2c>
 886:	c8 01       	movw	r24, r16
 888:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <decodeHeader>
 88c:	8a 81       	ldd	r24, Y+2	; 0x02
 88e:	9b 81       	ldd	r25, Y+3	; 0x03
 890:	89 17       	cp	r24, r25
 892:	91 f0       	breq	.+36     	; 0x8b8 <serialTask+0x58>
 894:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 898:	95 ff       	sbrs	r25, 5
 89a:	0e c0       	rjmp	.+28     	; 0x8b8 <serialTask+0x58>
 89c:	e8 81       	ld	r30, Y
 89e:	f9 81       	ldd	r31, Y+1	; 0x01
 8a0:	91 e0       	ldi	r25, 0x01	; 1
 8a2:	98 0f       	add	r25, r24
 8a4:	9a 83       	std	Y+2, r25	; 0x02
 8a6:	e8 0f       	add	r30, r24
 8a8:	f1 1d       	adc	r31, r1
 8aa:	80 81       	ld	r24, Z
 8ac:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 8b0:	8c 81       	ldd	r24, Y+4	; 0x04
 8b2:	9a 81       	ldd	r25, Y+2	; 0x02
 8b4:	89 23       	and	r24, r25
 8b6:	8a 83       	std	Y+2, r24	; 0x02
 8b8:	df 91       	pop	r29
 8ba:	cf 91       	pop	r28
 8bc:	1f 91       	pop	r17
 8be:	0f 91       	pop	r16
 8c0:	08 95       	ret

000008c2 <sensorMeasure>:
 8c2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <globalDistance+0x1>
 8c6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <globalDistance>
 8ca:	08 95       	ret

000008cc <addBox>:
 8cc:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <boxSizeconfig+0x2>
 8d0:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <boxSizeconfig+0x3>
 8d4:	28 17       	cp	r18, r24
 8d6:	39 07       	cpc	r19, r25
 8d8:	b0 f4       	brcc	.+44     	; 0x906 <__stack+0x7>
 8da:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <boxSizeconfig>
 8de:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <boxSizeconfig+0x1>
 8e2:	82 17       	cp	r24, r18
 8e4:	93 07       	cpc	r25, r19
 8e6:	78 f4       	brcc	.+30     	; 0x906 <__stack+0x7>
 8e8:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <Numbox>
 8ec:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <Numbox+0x1>
 8f0:	ee 0f       	add	r30, r30
 8f2:	ff 1f       	adc	r31, r31
 8f4:	e4 5a       	subi	r30, 0xA4	; 164
 8f6:	fc 4f       	sbci	r31, 0xFC	; 252
 8f8:	11 82       	std	Z+1, r1	; 0x01
 8fa:	21 e0       	ldi	r18, 0x01	; 1
 8fc:	20 83       	st	Z, r18
 8fe:	35 b1       	in	r19, 0x05	; 5
 900:	24 e0       	ldi	r18, 0x04	; 4
 902:	23 27       	eor	r18, r19
 904:	25 b9       	out	0x05, r18	; 5
 906:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <boxSizeconfig+0x6>
 90a:	30 91 2d 02 	lds	r19, 0x022D	; 0x80022d <boxSizeconfig+0x7>
 90e:	28 17       	cp	r18, r24
 910:	39 07       	cpc	r19, r25
 912:	b0 f4       	brcc	.+44     	; 0x940 <__stack+0x41>
 914:	20 91 2a 02 	lds	r18, 0x022A	; 0x80022a <boxSizeconfig+0x4>
 918:	30 91 2b 02 	lds	r19, 0x022B	; 0x80022b <boxSizeconfig+0x5>
 91c:	82 17       	cp	r24, r18
 91e:	93 07       	cpc	r25, r19
 920:	78 f4       	brcc	.+30     	; 0x940 <__stack+0x41>
 922:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <Numbox>
 926:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <Numbox+0x1>
 92a:	ee 0f       	add	r30, r30
 92c:	ff 1f       	adc	r31, r31
 92e:	e4 5a       	subi	r30, 0xA4	; 164
 930:	fc 4f       	sbci	r31, 0xFC	; 252
 932:	11 82       	std	Z+1, r1	; 0x01
 934:	22 e0       	ldi	r18, 0x02	; 2
 936:	20 83       	st	Z, r18
 938:	35 b1       	in	r19, 0x05	; 5
 93a:	20 e2       	ldi	r18, 0x20	; 32
 93c:	23 27       	eor	r18, r19
 93e:	25 b9       	out	0x05, r18	; 5
 940:	20 91 30 02 	lds	r18, 0x0230	; 0x800230 <boxSizeconfig+0xa>
 944:	30 91 31 02 	lds	r19, 0x0231	; 0x800231 <boxSizeconfig+0xb>
 948:	28 17       	cp	r18, r24
 94a:	39 07       	cpc	r19, r25
 94c:	b8 f4       	brcc	.+46     	; 0x97c <__stack+0x7d>
 94e:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <boxSizeconfig+0x8>
 952:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <boxSizeconfig+0x9>
 956:	82 17       	cp	r24, r18
 958:	93 07       	cpc	r25, r19
 95a:	80 f4       	brcc	.+32     	; 0x97c <__stack+0x7d>
 95c:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <Numbox>
 960:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <Numbox+0x1>
 964:	ee 0f       	add	r30, r30
 966:	ff 1f       	adc	r31, r31
 968:	e4 5a       	subi	r30, 0xA4	; 164
 96a:	fc 4f       	sbci	r31, 0xFC	; 252
 96c:	11 82       	std	Z+1, r1	; 0x01
 96e:	83 e0       	ldi	r24, 0x03	; 3
 970:	80 83       	st	Z, r24
 972:	95 b1       	in	r25, 0x05	; 5
 974:	80 e4       	ldi	r24, 0x40	; 64
 976:	89 27       	eor	r24, r25
 978:	85 b9       	out	0x05, r24	; 5
 97a:	03 c0       	rjmp	.+6      	; 0x982 <__stack+0x83>
 97c:	84 e0       	ldi	r24, 0x04	; 4
 97e:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <Cajita>
 982:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <Numbox>
 986:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <Numbox+0x1>
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <Numbox+0x1>
 990:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <Numbox>
 994:	0f 97       	sbiw	r24, 0x0f	; 15
 996:	20 f0       	brcs	.+8      	; 0x9a0 <__stack+0xa1>
 998:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <Numbox+0x1>
 99c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <Numbox>
 9a0:	8c e4       	ldi	r24, 0x4C	; 76
 9a2:	92 e0       	ldi	r25, 0x02	; 2
 9a4:	0e 94 4d 02 	call	0x49a	; 0x49a <IR_GetState>
 9a8:	81 30       	cpi	r24, 0x01	; 1
 9aa:	29 f4       	brne	.+10     	; 0x9b6 <__stack+0xb7>
 9ac:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 9b0:	8d 7f       	andi	r24, 0xFD	; 253
 9b2:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <flag0>
 9b6:	08 95       	ret

000009b8 <newBox>:
 9b8:	cf 93       	push	r28
 9ba:	df 93       	push	r29
 9bc:	ec 01       	movw	r28, r24
 9be:	8c e4       	ldi	r24, 0x4C	; 76
 9c0:	92 e0       	ldi	r25, 0x02	; 2
 9c2:	0e 94 4d 02 	call	0x49a	; 0x49a <IR_GetState>
 9c6:	81 11       	cpse	r24, r1
 9c8:	14 c0       	rjmp	.+40     	; 0x9f2 <newBox+0x3a>
 9ca:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 9ce:	81 fd       	sbrc	r24, 1
 9d0:	10 c0       	rjmp	.+32     	; 0x9f2 <newBox+0x3a>
 9d2:	cc 34       	cpi	r28, 0x4C	; 76
 9d4:	84 e0       	ldi	r24, 0x04	; 4
 9d6:	d8 07       	cpc	r29, r24
 9d8:	60 f4       	brcc	.+24     	; 0x9f2 <newBox+0x3a>
 9da:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 9de:	82 60       	ori	r24, 0x02	; 2
 9e0:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <flag0>
 9e4:	ce 01       	movw	r24, r28
 9e6:	0e 94 66 04 	call	0x8cc	; 0x8cc <addBox>
 9ea:	95 b1       	in	r25, 0x05	; 5
 9ec:	80 e2       	ldi	r24, 0x20	; 32
 9ee:	89 27       	eor	r24, r25
 9f0:	85 b9       	out	0x05, r24	; 5
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	08 95       	ret

000009f8 <every10ms>:
 9f8:	cf 93       	push	r28
 9fa:	df 93       	push	r29
 9fc:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <count100ms>
 a00:	81 11       	cpse	r24, r1
 a02:	1b c0       	rjmp	.+54     	; 0xa3a <every10ms+0x42>
 a04:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 a08:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 a0c:	44 96       	adiw	r24, 0x14	; 20
 a0e:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <aux16+0x1>
 a12:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <aux16>
 a16:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 a1a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 a1e:	86 e0       	ldi	r24, 0x06	; 6
 a20:	86 bb       	out	0x16, r24	; 22
 a22:	84 e0       	ldi	r24, 0x04	; 4
 a24:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 a28:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <HCSR_1>
 a2c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <HCSR_1+0x1>
 a30:	0e 94 87 00 	call	0x10e	; 0x10e <HCSR04_Start>
 a34:	8a e0       	ldi	r24, 0x0A	; 10
 a36:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <count100ms>
 a3a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <count40ms>
 a3e:	88 23       	and	r24, r24
 a40:	81 f0       	breq	.+32     	; 0xa62 <every10ms+0x6a>
 a42:	1d c0       	rjmp	.+58     	; 0xa7e <every10ms+0x86>
 a44:	fe 01       	movw	r30, r28
 a46:	ec 5b       	subi	r30, 0xBC	; 188
 a48:	fd 4f       	sbci	r31, 0xFD	; 253
 a4a:	ce 01       	movw	r24, r28
 a4c:	88 0f       	add	r24, r24
 a4e:	99 1f       	adc	r25, r25
 a50:	88 0f       	add	r24, r24
 a52:	99 1f       	adc	r25, r25
 a54:	60 81       	ld	r22, Z
 a56:	84 5b       	subi	r24, 0xB4	; 180
 a58:	9d 4f       	sbci	r25, 0xFD	; 253
 a5a:	0e 94 19 02 	call	0x432	; 0x432 <IR_Update>
 a5e:	21 96       	adiw	r28, 0x01	; 1
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <every10ms+0x6e>
 a62:	c0 e0       	ldi	r28, 0x00	; 0
 a64:	d0 e0       	ldi	r29, 0x00	; 0
 a66:	c4 30       	cpi	r28, 0x04	; 4
 a68:	d1 05       	cpc	r29, r1
 a6a:	64 f3       	brlt	.-40     	; 0xa44 <every10ms+0x4c>
 a6c:	84 e0       	ldi	r24, 0x04	; 4
 a6e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <count40ms>
 a72:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <globalDistance>
 a76:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <globalDistance+0x1>
 a7a:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <newBox>
 a7e:	89 b1       	in	r24, 0x09	; 9
 a80:	82 fb       	bst	r24, 2
 a82:	88 27       	eor	r24, r24
 a84:	80 f9       	bld	r24, 0
 a86:	e4 e4       	ldi	r30, 0x44	; 68
 a88:	f2 e0       	ldi	r31, 0x02	; 2
 a8a:	80 83       	st	Z, r24
 a8c:	89 b1       	in	r24, 0x09	; 9
 a8e:	83 fb       	bst	r24, 3
 a90:	88 27       	eor	r24, r24
 a92:	80 f9       	bld	r24, 0
 a94:	81 83       	std	Z+1, r24	; 0x01
 a96:	89 b1       	in	r24, 0x09	; 9
 a98:	82 95       	swap	r24
 a9a:	81 70       	andi	r24, 0x01	; 1
 a9c:	82 83       	std	Z+2, r24	; 0x02
 a9e:	89 b1       	in	r24, 0x09	; 9
 aa0:	85 fb       	bst	r24, 5
 aa2:	88 27       	eor	r24, r24
 aa4:	80 f9       	bld	r24, 0
 aa6:	83 83       	std	Z+3, r24	; 0x03
 aa8:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 aac:	8e 7f       	andi	r24, 0xFE	; 254
 aae:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <flag0>
 ab2:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <count100ms>
 ab6:	81 50       	subi	r24, 0x01	; 1
 ab8:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <count100ms>
 abc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <count40ms>
 ac0:	81 50       	subi	r24, 0x01	; 1
 ac2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <count40ms>
 ac6:	df 91       	pop	r29
 ac8:	cf 91       	pop	r28
 aca:	08 95       	ret

00000acc <main>:
/* END Function prototypes user code ------------------------------------------*/

int main(){
	
	cli();
 acc:	f8 94       	cli

	/* END Local variables -------------------------------------------------------*/


	/* User code Init ------------------------------------------------------------*/
	flag0.byte = 0;
 ace:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <flag0>
	
	ini_ports();
 ad2:	0e 94 c8 01 	call	0x390	; 0x390 <ini_ports>
	ini_timer1();
 ad6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <ini_timer1>
	ini_timer0();
 ada:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <ini_timer0>
	ini_USART(16);
 ade:	80 e1       	ldi	r24, 0x10	; 16
 ae0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <ini_USART>
	
	IR_Init(&ir_sensor[0]);
 ae4:	8c e4       	ldi	r24, 0x4C	; 76
 ae6:	92 e0       	ldi	r25, 0x02	; 2
 ae8:	0e 94 04 02 	call	0x408	; 0x408 <IR_Init>
	
	addServo(&PORTD,SV0);
 aec:	67 e0       	ldi	r22, 0x07	; 7
 aee:	8b e2       	ldi	r24, 0x2B	; 43
 af0:	90 e0       	ldi	r25, 0x00	; 0
 af2:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <addServo>
	addServo(&PORTB,SV1);
 af6:	64 e0       	ldi	r22, 0x04	; 4
 af8:	85 e2       	ldi	r24, 0x25	; 37
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <addServo>
	addServo(&PORTB,SV2);
 b00:	63 e0       	ldi	r22, 0x03	; 3
 b02:	85 e2       	ldi	r24, 0x25	; 37
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <addServo>
	
	HCSR_1 = HCSR04_AddNew(&WritePin_HCSR, 16);
 b0a:	40 e1       	ldi	r20, 0x10	; 16
 b0c:	50 e0       	ldi	r21, 0x00	; 0
 b0e:	60 e0       	ldi	r22, 0x00	; 0
 b10:	70 e0       	ldi	r23, 0x00	; 0
 b12:	88 ed       	ldi	r24, 0xD8	; 216
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	0e 94 5a 00 	call	0xb4	; 0xb4 <HCSR04_AddNew>
 b1a:	a0 e0       	ldi	r26, 0x00	; 0
 b1c:	b0 e0       	ldi	r27, 0x00	; 0
 b1e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <HCSR_1>
 b22:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <HCSR_1+0x1>
 b26:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <HCSR_1+0x2>
 b2a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <HCSR_1+0x3>
	
	dataRx.buff = (uint8_t *)buffRx;
 b2e:	e2 e3       	ldi	r30, 0x32	; 50
 b30:	f2 e0       	ldi	r31, 0x02	; 2
 b32:	86 e2       	ldi	r24, 0x26	; 38
 b34:	91 e0       	ldi	r25, 0x01	; 1
 b36:	91 83       	std	Z+1, r25	; 0x01
 b38:	80 83       	st	Z, r24
	dataRx.indexR = 0;
 b3a:	12 82       	std	Z+2, r1	; 0x02
	dataRx.indexW = 0;
 b3c:	13 82       	std	Z+3, r1	; 0x03
	dataRx.header = HEADER_U;
 b3e:	10 86       	std	Z+8, r1	; 0x08
	dataRx.mask = RXBUFSIZE - 1;
 b40:	8f ef       	ldi	r24, 0xFF	; 255
 b42:	85 83       	std	Z+5, r24	; 0x05
	
	dataTx.buff = buffTx;
 b44:	ed e3       	ldi	r30, 0x3D	; 61
 b46:	f2 e0       	ldi	r31, 0x02	; 2
 b48:	2c e5       	ldi	r18, 0x5C	; 92
 b4a:	32 e0       	ldi	r19, 0x02	; 2
 b4c:	31 83       	std	Z+1, r19	; 0x01
 b4e:	20 83       	st	Z, r18
	dataTx.indexR = 0;
 b50:	12 82       	std	Z+2, r1	; 0x02
	dataTx.indexW = 0;
 b52:	13 82       	std	Z+3, r1	; 0x03
	dataTx.mask = TXBUFSIZE -1;
 b54:	84 83       	std	Z+4, r24	; 0x04
	
	boxSizeconfig.smallboxF=Cm15;
 b56:	e6 e2       	ldi	r30, 0x26	; 38
 b58:	f2 e0       	ldi	r31, 0x02	; 2
 b5a:	86 e6       	ldi	r24, 0x66	; 102
 b5c:	93 e0       	ldi	r25, 0x03	; 3
 b5e:	91 83       	std	Z+1, r25	; 0x01
 b60:	80 83       	st	Z, r24
	boxSizeconfig.smallboxC=Cm13;
 b62:	82 ef       	ldi	r24, 0xF2	; 242
 b64:	92 e0       	ldi	r25, 0x02	; 2
 b66:	93 83       	std	Z+3, r25	; 0x03
 b68:	82 83       	std	Z+2, r24	; 0x02
	boxSizeconfig.mediumboxF=Cm13;
 b6a:	95 83       	std	Z+5, r25	; 0x05
 b6c:	84 83       	std	Z+4, r24	; 0x04
	boxSizeconfig.mediumboxC=Cm11;
 b6e:	8e e7       	ldi	r24, 0x7E	; 126
 b70:	92 e0       	ldi	r25, 0x02	; 2
 b72:	97 83       	std	Z+7, r25	; 0x07
 b74:	86 83       	std	Z+6, r24	; 0x06
	boxSizeconfig.largeboxF=Cm11;
 b76:	91 87       	std	Z+9, r25	; 0x09
 b78:	80 87       	std	Z+8, r24	; 0x08
	boxSizeconfig.largeboxC=Cm9;
 b7a:	8a e0       	ldi	r24, 0x0A	; 10
 b7c:	92 e0       	ldi	r25, 0x02	; 2
 b7e:	93 87       	std	Z+11, r25	; 0x0b
 b80:	82 87       	std	Z+10, r24	; 0x0a
	
	ir_sensor[1].irType = SmallBox;
 b82:	ec e4       	ldi	r30, 0x4C	; 76
 b84:	f2 e0       	ldi	r31, 0x02	; 2
 b86:	81 e0       	ldi	r24, 0x01	; 1
 b88:	87 83       	std	Z+7, r24	; 0x07
	ir_sensor[2].irType = MediumBox;
 b8a:	82 e0       	ldi	r24, 0x02	; 2
 b8c:	83 87       	std	Z+11, r24	; 0x0b
	ir_sensor[3].irType = LargeBox;
 b8e:	83 e0       	ldi	r24, 0x03	; 3
 b90:	87 87       	std	Z+15, r24	; 0x0f
	
	/* END User code Init --------------------------------------------------------*/
	sei();
 b92:	78 94       	sei

	while (1){
		/* User Code loop ------------------------------------------------------------*/
		task_HCSR();
 b94:	0e 94 af 00 	call	0x15e	; 0x15e <task_HCSR>
		serialTask(&dataRx,&dataTx);
 b98:	6d e3       	ldi	r22, 0x3D	; 61
 b9a:	72 e0       	ldi	r23, 0x02	; 2
 b9c:	82 e3       	ldi	r24, 0x32	; 50
 b9e:	92 e0       	ldi	r25, 0x02	; 2
 ba0:	0e 94 30 04 	call	0x860	; 0x860 <serialTask>
		if (IS10MS)
 ba4:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <flag0>
 ba8:	80 ff       	sbrs	r24, 0
 baa:	f4 cf       	rjmp	.-24     	; 0xb94 <main+0xc8>
			every10ms();
 bac:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <every10ms>
 bb0:	f1 cf       	rjmp	.-30     	; 0xb94 <main+0xc8>

00000bb2 <addServo>:
 bb2:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <ServN>
 bb6:	e2 2f       	mov	r30, r18
 bb8:	f0 e0       	ldi	r31, 0x00	; 0
 bba:	af 01       	movw	r20, r30
 bbc:	44 0f       	add	r20, r20
 bbe:	55 1f       	adc	r21, r21
 bc0:	44 0f       	add	r20, r20
 bc2:	55 1f       	adc	r21, r21
 bc4:	e4 0f       	add	r30, r20
 bc6:	f5 1f       	adc	r31, r21
 bc8:	ef 5e       	subi	r30, 0xEF	; 239
 bca:	fe 4f       	sbci	r31, 0xFE	; 254
 bcc:	62 83       	std	Z+2, r22	; 0x02
 bce:	91 83       	std	Z+1, r25	; 0x01
 bd0:	80 83       	st	Z, r24
 bd2:	2f 5f       	subi	r18, 0xFF	; 255
 bd4:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <ServN>
 bd8:	08 95       	ret

00000bda <writeServo>:
 bda:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <is20ms>
 bde:	81 50       	subi	r24, 0x01	; 1
 be0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <is20ms>
 be4:	20 e0       	ldi	r18, 0x00	; 0
 be6:	2a c0       	rjmp	.+84     	; 0xc3c <writeServo+0x62>
 be8:	82 2f       	mov	r24, r18
 bea:	90 e0       	ldi	r25, 0x00	; 0
 bec:	fc 01       	movw	r30, r24
 bee:	ee 0f       	add	r30, r30
 bf0:	ff 1f       	adc	r31, r31
 bf2:	ee 0f       	add	r30, r30
 bf4:	ff 1f       	adc	r31, r31
 bf6:	e8 0f       	add	r30, r24
 bf8:	f9 1f       	adc	r31, r25
 bfa:	ef 5e       	subi	r30, 0xEF	; 239
 bfc:	fe 4f       	sbci	r31, 0xFE	; 254
 bfe:	33 81       	ldd	r19, Z+3	; 0x03
 c00:	31 50       	subi	r19, 0x01	; 1
 c02:	33 83       	std	Z+3, r19	; 0x03
 c04:	33 81       	ldd	r19, Z+3	; 0x03
 c06:	31 11       	cpse	r19, r1
 c08:	18 c0       	rjmp	.+48     	; 0xc3a <writeServo+0x60>
 c0a:	fc 01       	movw	r30, r24
 c0c:	ee 0f       	add	r30, r30
 c0e:	ff 1f       	adc	r31, r31
 c10:	ee 0f       	add	r30, r30
 c12:	ff 1f       	adc	r31, r31
 c14:	8e 0f       	add	r24, r30
 c16:	9f 1f       	adc	r25, r31
 c18:	fc 01       	movw	r30, r24
 c1a:	ef 5e       	subi	r30, 0xEF	; 239
 c1c:	fe 4f       	sbci	r31, 0xFE	; 254
 c1e:	a0 81       	ld	r26, Z
 c20:	b1 81       	ldd	r27, Z+1	; 0x01
 c22:	3c 91       	ld	r19, X
 c24:	81 e0       	ldi	r24, 0x01	; 1
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	02 80       	ldd	r0, Z+2	; 0x02
 c2a:	02 c0       	rjmp	.+4      	; 0xc30 <writeServo+0x56>
 c2c:	88 0f       	add	r24, r24
 c2e:	99 1f       	adc	r25, r25
 c30:	0a 94       	dec	r0
 c32:	e2 f7       	brpl	.-8      	; 0xc2c <writeServo+0x52>
 c34:	80 95       	com	r24
 c36:	83 23       	and	r24, r19
 c38:	8c 93       	st	X, r24
 c3a:	2f 5f       	subi	r18, 0xFF	; 255
 c3c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <ServN>
 c40:	28 17       	cp	r18, r24
 c42:	90 f2       	brcs	.-92     	; 0xbe8 <writeServo+0xe>
 c44:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <is20ms>
 c48:	99 23       	and	r25, r25
 c4a:	e9 f0       	breq	.+58     	; 0xc86 <writeServo+0xac>
 c4c:	08 95       	ret
 c4e:	e9 2f       	mov	r30, r25
 c50:	f0 e0       	ldi	r31, 0x00	; 0
 c52:	9f 01       	movw	r18, r30
 c54:	22 0f       	add	r18, r18
 c56:	33 1f       	adc	r19, r19
 c58:	22 0f       	add	r18, r18
 c5a:	33 1f       	adc	r19, r19
 c5c:	e2 0f       	add	r30, r18
 c5e:	f3 1f       	adc	r31, r19
 c60:	ef 5e       	subi	r30, 0xEF	; 239
 c62:	fe 4f       	sbci	r31, 0xFE	; 254
 c64:	24 81       	ldd	r18, Z+4	; 0x04
 c66:	23 83       	std	Z+3, r18	; 0x03
 c68:	a0 81       	ld	r26, Z
 c6a:	b1 81       	ldd	r27, Z+1	; 0x01
 c6c:	4c 91       	ld	r20, X
 c6e:	21 e0       	ldi	r18, 0x01	; 1
 c70:	30 e0       	ldi	r19, 0x00	; 0
 c72:	02 80       	ldd	r0, Z+2	; 0x02
 c74:	02 c0       	rjmp	.+4      	; 0xc7a <writeServo+0xa0>
 c76:	22 0f       	add	r18, r18
 c78:	33 1f       	adc	r19, r19
 c7a:	0a 94       	dec	r0
 c7c:	e2 f7       	brpl	.-8      	; 0xc76 <writeServo+0x9c>
 c7e:	24 2b       	or	r18, r20
 c80:	2c 93       	st	X, r18
 c82:	9f 5f       	subi	r25, 0xFF	; 255
 c84:	01 c0       	rjmp	.+2      	; 0xc88 <writeServo+0xae>
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	98 17       	cp	r25, r24
 c8a:	08 f3       	brcs	.-62     	; 0xc4e <writeServo+0x74>
 c8c:	8c e9       	ldi	r24, 0x9C	; 156
 c8e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <is20ms>
 c92:	08 95       	ret

00000c94 <__tablejump2__>:
 c94:	ee 0f       	add	r30, r30
 c96:	ff 1f       	adc	r31, r31
 c98:	05 90       	lpm	r0, Z+
 c9a:	f4 91       	lpm	r31, Z
 c9c:	e0 2d       	mov	r30, r0
 c9e:	09 94       	ijmp

00000ca0 <malloc>:
 ca0:	0f 93       	push	r16
 ca2:	1f 93       	push	r17
 ca4:	cf 93       	push	r28
 ca6:	df 93       	push	r29
 ca8:	82 30       	cpi	r24, 0x02	; 2
 caa:	91 05       	cpc	r25, r1
 cac:	10 f4       	brcc	.+4      	; 0xcb2 <malloc+0x12>
 cae:	82 e0       	ldi	r24, 0x02	; 2
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	e0 91 7c 03 	lds	r30, 0x037C	; 0x80037c <__flp>
 cb6:	f0 91 7d 03 	lds	r31, 0x037D	; 0x80037d <__flp+0x1>
 cba:	20 e0       	ldi	r18, 0x00	; 0
 cbc:	30 e0       	ldi	r19, 0x00	; 0
 cbe:	a0 e0       	ldi	r26, 0x00	; 0
 cc0:	b0 e0       	ldi	r27, 0x00	; 0
 cc2:	30 97       	sbiw	r30, 0x00	; 0
 cc4:	19 f1       	breq	.+70     	; 0xd0c <malloc+0x6c>
 cc6:	40 81       	ld	r20, Z
 cc8:	51 81       	ldd	r21, Z+1	; 0x01
 cca:	02 81       	ldd	r16, Z+2	; 0x02
 ccc:	13 81       	ldd	r17, Z+3	; 0x03
 cce:	48 17       	cp	r20, r24
 cd0:	59 07       	cpc	r21, r25
 cd2:	c8 f0       	brcs	.+50     	; 0xd06 <malloc+0x66>
 cd4:	84 17       	cp	r24, r20
 cd6:	95 07       	cpc	r25, r21
 cd8:	69 f4       	brne	.+26     	; 0xcf4 <malloc+0x54>
 cda:	10 97       	sbiw	r26, 0x00	; 0
 cdc:	31 f0       	breq	.+12     	; 0xcea <malloc+0x4a>
 cde:	12 96       	adiw	r26, 0x02	; 2
 ce0:	0c 93       	st	X, r16
 ce2:	12 97       	sbiw	r26, 0x02	; 2
 ce4:	13 96       	adiw	r26, 0x03	; 3
 ce6:	1c 93       	st	X, r17
 ce8:	27 c0       	rjmp	.+78     	; 0xd38 <malloc+0x98>
 cea:	00 93 7c 03 	sts	0x037C, r16	; 0x80037c <__flp>
 cee:	10 93 7d 03 	sts	0x037D, r17	; 0x80037d <__flp+0x1>
 cf2:	22 c0       	rjmp	.+68     	; 0xd38 <malloc+0x98>
 cf4:	21 15       	cp	r18, r1
 cf6:	31 05       	cpc	r19, r1
 cf8:	19 f0       	breq	.+6      	; 0xd00 <malloc+0x60>
 cfa:	42 17       	cp	r20, r18
 cfc:	53 07       	cpc	r21, r19
 cfe:	18 f4       	brcc	.+6      	; 0xd06 <malloc+0x66>
 d00:	9a 01       	movw	r18, r20
 d02:	bd 01       	movw	r22, r26
 d04:	ef 01       	movw	r28, r30
 d06:	df 01       	movw	r26, r30
 d08:	f8 01       	movw	r30, r16
 d0a:	db cf       	rjmp	.-74     	; 0xcc2 <malloc+0x22>
 d0c:	21 15       	cp	r18, r1
 d0e:	31 05       	cpc	r19, r1
 d10:	f9 f0       	breq	.+62     	; 0xd50 <malloc+0xb0>
 d12:	28 1b       	sub	r18, r24
 d14:	39 0b       	sbc	r19, r25
 d16:	24 30       	cpi	r18, 0x04	; 4
 d18:	31 05       	cpc	r19, r1
 d1a:	80 f4       	brcc	.+32     	; 0xd3c <malloc+0x9c>
 d1c:	8a 81       	ldd	r24, Y+2	; 0x02
 d1e:	9b 81       	ldd	r25, Y+3	; 0x03
 d20:	61 15       	cp	r22, r1
 d22:	71 05       	cpc	r23, r1
 d24:	21 f0       	breq	.+8      	; 0xd2e <malloc+0x8e>
 d26:	fb 01       	movw	r30, r22
 d28:	93 83       	std	Z+3, r25	; 0x03
 d2a:	82 83       	std	Z+2, r24	; 0x02
 d2c:	04 c0       	rjmp	.+8      	; 0xd36 <malloc+0x96>
 d2e:	90 93 7d 03 	sts	0x037D, r25	; 0x80037d <__flp+0x1>
 d32:	80 93 7c 03 	sts	0x037C, r24	; 0x80037c <__flp>
 d36:	fe 01       	movw	r30, r28
 d38:	32 96       	adiw	r30, 0x02	; 2
 d3a:	44 c0       	rjmp	.+136    	; 0xdc4 <malloc+0x124>
 d3c:	fe 01       	movw	r30, r28
 d3e:	e2 0f       	add	r30, r18
 d40:	f3 1f       	adc	r31, r19
 d42:	81 93       	st	Z+, r24
 d44:	91 93       	st	Z+, r25
 d46:	22 50       	subi	r18, 0x02	; 2
 d48:	31 09       	sbc	r19, r1
 d4a:	39 83       	std	Y+1, r19	; 0x01
 d4c:	28 83       	st	Y, r18
 d4e:	3a c0       	rjmp	.+116    	; 0xdc4 <malloc+0x124>
 d50:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <__brkval>
 d54:	30 91 7b 03 	lds	r19, 0x037B	; 0x80037b <__brkval+0x1>
 d58:	23 2b       	or	r18, r19
 d5a:	41 f4       	brne	.+16     	; 0xd6c <malloc+0xcc>
 d5c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 d60:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 d64:	30 93 7b 03 	sts	0x037B, r19	; 0x80037b <__brkval+0x1>
 d68:	20 93 7a 03 	sts	0x037A, r18	; 0x80037a <__brkval>
 d6c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 d70:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 d74:	21 15       	cp	r18, r1
 d76:	31 05       	cpc	r19, r1
 d78:	41 f4       	brne	.+16     	; 0xd8a <malloc+0xea>
 d7a:	2d b7       	in	r18, 0x3d	; 61
 d7c:	3e b7       	in	r19, 0x3e	; 62
 d7e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 d82:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 d86:	24 1b       	sub	r18, r20
 d88:	35 0b       	sbc	r19, r21
 d8a:	e0 91 7a 03 	lds	r30, 0x037A	; 0x80037a <__brkval>
 d8e:	f0 91 7b 03 	lds	r31, 0x037B	; 0x80037b <__brkval+0x1>
 d92:	e2 17       	cp	r30, r18
 d94:	f3 07       	cpc	r31, r19
 d96:	a0 f4       	brcc	.+40     	; 0xdc0 <malloc+0x120>
 d98:	2e 1b       	sub	r18, r30
 d9a:	3f 0b       	sbc	r19, r31
 d9c:	28 17       	cp	r18, r24
 d9e:	39 07       	cpc	r19, r25
 da0:	78 f0       	brcs	.+30     	; 0xdc0 <malloc+0x120>
 da2:	ac 01       	movw	r20, r24
 da4:	4e 5f       	subi	r20, 0xFE	; 254
 da6:	5f 4f       	sbci	r21, 0xFF	; 255
 da8:	24 17       	cp	r18, r20
 daa:	35 07       	cpc	r19, r21
 dac:	48 f0       	brcs	.+18     	; 0xdc0 <malloc+0x120>
 dae:	4e 0f       	add	r20, r30
 db0:	5f 1f       	adc	r21, r31
 db2:	50 93 7b 03 	sts	0x037B, r21	; 0x80037b <__brkval+0x1>
 db6:	40 93 7a 03 	sts	0x037A, r20	; 0x80037a <__brkval>
 dba:	81 93       	st	Z+, r24
 dbc:	91 93       	st	Z+, r25
 dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <malloc+0x124>
 dc0:	e0 e0       	ldi	r30, 0x00	; 0
 dc2:	f0 e0       	ldi	r31, 0x00	; 0
 dc4:	cf 01       	movw	r24, r30
 dc6:	df 91       	pop	r29
 dc8:	cf 91       	pop	r28
 dca:	1f 91       	pop	r17
 dcc:	0f 91       	pop	r16
 dce:	08 95       	ret

00000dd0 <free>:
 dd0:	cf 93       	push	r28
 dd2:	df 93       	push	r29
 dd4:	00 97       	sbiw	r24, 0x00	; 0
 dd6:	09 f4       	brne	.+2      	; 0xdda <free+0xa>
 dd8:	81 c0       	rjmp	.+258    	; 0xedc <free+0x10c>
 dda:	fc 01       	movw	r30, r24
 ddc:	32 97       	sbiw	r30, 0x02	; 2
 dde:	13 82       	std	Z+3, r1	; 0x03
 de0:	12 82       	std	Z+2, r1	; 0x02
 de2:	a0 91 7c 03 	lds	r26, 0x037C	; 0x80037c <__flp>
 de6:	b0 91 7d 03 	lds	r27, 0x037D	; 0x80037d <__flp+0x1>
 dea:	10 97       	sbiw	r26, 0x00	; 0
 dec:	81 f4       	brne	.+32     	; 0xe0e <free+0x3e>
 dee:	20 81       	ld	r18, Z
 df0:	31 81       	ldd	r19, Z+1	; 0x01
 df2:	82 0f       	add	r24, r18
 df4:	93 1f       	adc	r25, r19
 df6:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <__brkval>
 dfa:	30 91 7b 03 	lds	r19, 0x037B	; 0x80037b <__brkval+0x1>
 dfe:	28 17       	cp	r18, r24
 e00:	39 07       	cpc	r19, r25
 e02:	51 f5       	brne	.+84     	; 0xe58 <free+0x88>
 e04:	f0 93 7b 03 	sts	0x037B, r31	; 0x80037b <__brkval+0x1>
 e08:	e0 93 7a 03 	sts	0x037A, r30	; 0x80037a <__brkval>
 e0c:	67 c0       	rjmp	.+206    	; 0xedc <free+0x10c>
 e0e:	ed 01       	movw	r28, r26
 e10:	20 e0       	ldi	r18, 0x00	; 0
 e12:	30 e0       	ldi	r19, 0x00	; 0
 e14:	ce 17       	cp	r28, r30
 e16:	df 07       	cpc	r29, r31
 e18:	40 f4       	brcc	.+16     	; 0xe2a <free+0x5a>
 e1a:	4a 81       	ldd	r20, Y+2	; 0x02
 e1c:	5b 81       	ldd	r21, Y+3	; 0x03
 e1e:	9e 01       	movw	r18, r28
 e20:	41 15       	cp	r20, r1
 e22:	51 05       	cpc	r21, r1
 e24:	f1 f0       	breq	.+60     	; 0xe62 <free+0x92>
 e26:	ea 01       	movw	r28, r20
 e28:	f5 cf       	rjmp	.-22     	; 0xe14 <free+0x44>
 e2a:	d3 83       	std	Z+3, r29	; 0x03
 e2c:	c2 83       	std	Z+2, r28	; 0x02
 e2e:	40 81       	ld	r20, Z
 e30:	51 81       	ldd	r21, Z+1	; 0x01
 e32:	84 0f       	add	r24, r20
 e34:	95 1f       	adc	r25, r21
 e36:	c8 17       	cp	r28, r24
 e38:	d9 07       	cpc	r29, r25
 e3a:	59 f4       	brne	.+22     	; 0xe52 <free+0x82>
 e3c:	88 81       	ld	r24, Y
 e3e:	99 81       	ldd	r25, Y+1	; 0x01
 e40:	84 0f       	add	r24, r20
 e42:	95 1f       	adc	r25, r21
 e44:	02 96       	adiw	r24, 0x02	; 2
 e46:	91 83       	std	Z+1, r25	; 0x01
 e48:	80 83       	st	Z, r24
 e4a:	8a 81       	ldd	r24, Y+2	; 0x02
 e4c:	9b 81       	ldd	r25, Y+3	; 0x03
 e4e:	93 83       	std	Z+3, r25	; 0x03
 e50:	82 83       	std	Z+2, r24	; 0x02
 e52:	21 15       	cp	r18, r1
 e54:	31 05       	cpc	r19, r1
 e56:	29 f4       	brne	.+10     	; 0xe62 <free+0x92>
 e58:	f0 93 7d 03 	sts	0x037D, r31	; 0x80037d <__flp+0x1>
 e5c:	e0 93 7c 03 	sts	0x037C, r30	; 0x80037c <__flp>
 e60:	3d c0       	rjmp	.+122    	; 0xedc <free+0x10c>
 e62:	e9 01       	movw	r28, r18
 e64:	fb 83       	std	Y+3, r31	; 0x03
 e66:	ea 83       	std	Y+2, r30	; 0x02
 e68:	49 91       	ld	r20, Y+
 e6a:	59 91       	ld	r21, Y+
 e6c:	c4 0f       	add	r28, r20
 e6e:	d5 1f       	adc	r29, r21
 e70:	ec 17       	cp	r30, r28
 e72:	fd 07       	cpc	r31, r29
 e74:	61 f4       	brne	.+24     	; 0xe8e <free+0xbe>
 e76:	80 81       	ld	r24, Z
 e78:	91 81       	ldd	r25, Z+1	; 0x01
 e7a:	84 0f       	add	r24, r20
 e7c:	95 1f       	adc	r25, r21
 e7e:	02 96       	adiw	r24, 0x02	; 2
 e80:	e9 01       	movw	r28, r18
 e82:	99 83       	std	Y+1, r25	; 0x01
 e84:	88 83       	st	Y, r24
 e86:	82 81       	ldd	r24, Z+2	; 0x02
 e88:	93 81       	ldd	r25, Z+3	; 0x03
 e8a:	9b 83       	std	Y+3, r25	; 0x03
 e8c:	8a 83       	std	Y+2, r24	; 0x02
 e8e:	e0 e0       	ldi	r30, 0x00	; 0
 e90:	f0 e0       	ldi	r31, 0x00	; 0
 e92:	12 96       	adiw	r26, 0x02	; 2
 e94:	8d 91       	ld	r24, X+
 e96:	9c 91       	ld	r25, X
 e98:	13 97       	sbiw	r26, 0x03	; 3
 e9a:	00 97       	sbiw	r24, 0x00	; 0
 e9c:	19 f0       	breq	.+6      	; 0xea4 <free+0xd4>
 e9e:	fd 01       	movw	r30, r26
 ea0:	dc 01       	movw	r26, r24
 ea2:	f7 cf       	rjmp	.-18     	; 0xe92 <free+0xc2>
 ea4:	8d 91       	ld	r24, X+
 ea6:	9c 91       	ld	r25, X
 ea8:	11 97       	sbiw	r26, 0x01	; 1
 eaa:	9d 01       	movw	r18, r26
 eac:	2e 5f       	subi	r18, 0xFE	; 254
 eae:	3f 4f       	sbci	r19, 0xFF	; 255
 eb0:	82 0f       	add	r24, r18
 eb2:	93 1f       	adc	r25, r19
 eb4:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <__brkval>
 eb8:	30 91 7b 03 	lds	r19, 0x037B	; 0x80037b <__brkval+0x1>
 ebc:	28 17       	cp	r18, r24
 ebe:	39 07       	cpc	r19, r25
 ec0:	69 f4       	brne	.+26     	; 0xedc <free+0x10c>
 ec2:	30 97       	sbiw	r30, 0x00	; 0
 ec4:	29 f4       	brne	.+10     	; 0xed0 <free+0x100>
 ec6:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__flp+0x1>
 eca:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__flp>
 ece:	02 c0       	rjmp	.+4      	; 0xed4 <free+0x104>
 ed0:	13 82       	std	Z+3, r1	; 0x03
 ed2:	12 82       	std	Z+2, r1	; 0x02
 ed4:	b0 93 7b 03 	sts	0x037B, r27	; 0x80037b <__brkval+0x1>
 ed8:	a0 93 7a 03 	sts	0x037A, r26	; 0x80037a <__brkval>
 edc:	df 91       	pop	r29
 ede:	cf 91       	pop	r28
 ee0:	08 95       	ret

00000ee2 <_exit>:
 ee2:	f8 94       	cli

00000ee4 <__stop_program>:
 ee4:	ff cf       	rjmp	.-2      	; 0xee4 <__stop_program>
