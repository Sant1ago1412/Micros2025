
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000003aa  0000043e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002e  00800102  00800102  00000440  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000470  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aa0  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073d  00000000  00000000  00000fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000452  00000000  00000000  000016fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00001b50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000501  00000000  00000000  00001c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000015d  00000000  00000000  00002169  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000022c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_12>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ea       	ldi	r30, 0xAA	; 170
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 33       	cpi	r26, 0x30	; 48
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ab 01 	call	0x356	; 0x356 <main>
  9e:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_12>:
void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
	/* Put data into buffer, sends the data */
	UDR0 = data;
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
  b4:	ef 93       	push	r30
  b6:	ff 93       	push	r31
  b8:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <flag0>
  bc:	81 60       	ori	r24, 0x01	; 1
  be:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <flag0>
  c2:	ea e8       	ldi	r30, 0x8A	; 138
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	91 81       	ldd	r25, Z+1	; 0x01
  ca:	80 5e       	subi	r24, 0xE0	; 224
  cc:	91 4b       	sbci	r25, 0xB1	; 177
  ce:	91 83       	std	Z+1, r25	; 0x01
  d0:	80 83       	st	Z, r24
  d2:	ff 91       	pop	r31
  d4:	ef 91       	pop	r30
  d6:	9f 91       	pop	r25
  d8:	8f 91       	pop	r24
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <__vector_10>:
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	8f 93       	push	r24
  f0:	9f 93       	push	r25
  f2:	af 93       	push	r26
  f4:	bf 93       	push	r27
  f6:	ef 93       	push	r30
  f8:	ff 93       	push	r31
  fa:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  fe:	86 ff       	sbrs	r24, 6
 100:	10 c0       	rjmp	.+32     	; 0x122 <__vector_10+0x3e>
 102:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 106:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 10a:	e2 e0       	ldi	r30, 0x02	; 2
 10c:	f1 e0       	ldi	r31, 0x01	; 1
 10e:	92 83       	std	Z+2, r25	; 0x02
 110:	81 83       	std	Z+1, r24	; 0x01
 112:	a1 e8       	ldi	r26, 0x81	; 129
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	8c 91       	ld	r24, X
 118:	8f 7b       	andi	r24, 0xBF	; 191
 11a:	8c 93       	st	X, r24
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	80 83       	st	Z, r24
 120:	2d c0       	rjmp	.+90     	; 0x17c <__vector_10+0x98>
 122:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 126:	81 30       	cpi	r24, 0x01	; 1
 128:	d9 f4       	brne	.+54     	; 0x160 <__vector_10+0x7c>
 12a:	85 b1       	in	r24, 0x05	; 5
 12c:	8d 7f       	andi	r24, 0xFD	; 253
 12e:	85 b9       	out	0x05, r24	; 5
 130:	ef e6       	ldi	r30, 0x6F	; 111
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	8d 7f       	andi	r24, 0xFD	; 253
 138:	80 83       	st	Z, r24
 13a:	e1 e8       	ldi	r30, 0x81	; 129
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	80 64       	ori	r24, 0x40	; 64
 142:	80 83       	st	Z, r24
 144:	aa e0       	ldi	r26, 0x0A	; 10
 146:	b1 e0       	ldi	r27, 0x01	; 1
 148:	ec 91       	ld	r30, X
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	8e 0f       	add	r24, r30
 14e:	8c 93       	st	X, r24
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	e6 5f       	subi	r30, 0xF6	; 246
 154:	fe 4f       	sbci	r31, 0xFE	; 254
 156:	82 e3       	ldi	r24, 0x32	; 50
 158:	82 83       	std	Z+2, r24	; 0x02
 15a:	82 e0       	ldi	r24, 0x02	; 2
 15c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 160:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	51 f4       	brne	.+20     	; 0x17c <__vector_10+0x98>
 168:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 16c:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 170:	e2 e0       	ldi	r30, 0x02	; 2
 172:	f1 e0       	ldi	r31, 0x01	; 1
 174:	94 83       	std	Z+4, r25	; 0x04
 176:	83 83       	std	Z+3, r24	; 0x03
 178:	84 e0       	ldi	r24, 0x04	; 4
 17a:	80 83       	st	Z, r24
 17c:	ff 91       	pop	r31
 17e:	ef 91       	pop	r30
 180:	bf 91       	pop	r27
 182:	af 91       	pop	r26
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <initialize_ports>:
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	84 b9       	out	0x04, r24	; 4
 196:	80 e1       	ldi	r24, 0x10	; 16
 198:	85 b9       	out	0x05, r24	; 5
 19a:	08 95       	ret

0000019c <initialize_timer1>:
 19c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 1a0:	82 ec       	ldi	r24, 0xC2	; 194
 1a2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 1a6:	86 b3       	in	r24, 0x16	; 22
 1a8:	86 bb       	out	0x16, r24	; 22
 1aa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 1ae:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 1b2:	84 e2       	ldi	r24, 0x24	; 36
 1b4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 1b8:	8f e1       	ldi	r24, 0x1F	; 31
 1ba:	9e e4       	ldi	r25, 0x4E	; 78
 1bc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 1c0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 1c4:	08 95       	ret

000001c6 <initialize_HCSR>:
 1c6:	e2 e0       	ldi	r30, 0x02	; 2
 1c8:	f1 e0       	ldi	r31, 0x01	; 1
 1ca:	10 82       	st	Z, r1
 1cc:	16 82       	std	Z+6, r1	; 0x06
 1ce:	15 82       	std	Z+5, r1	; 0x05
 1d0:	08 95       	ret

000001d2 <initialize_USART>:
 1d2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1d6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1da:	8e ef       	ldi	r24, 0xFE	; 254
 1dc:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1e0:	88 e9       	ldi	r24, 0x98	; 152
 1e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1ec:	08 95       	ret

000001ee <task_100ms>:
 1ee:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
 1f2:	08 95       	ret

000001f4 <task_HCSR>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 1fc:	81 30       	cpi	r24, 0x01	; 1
 1fe:	51 f1       	breq	.+84     	; 0x254 <task_HCSR+0x60>
 200:	28 f0       	brcs	.+10     	; 0x20c <task_HCSR+0x18>
 202:	83 30       	cpi	r24, 0x03	; 3
 204:	99 f1       	breq	.+102    	; 0x26c <task_HCSR+0x78>
 206:	84 30       	cpi	r24, 0x04	; 4
 208:	e9 f1       	breq	.+122    	; 0x284 <task_HCSR+0x90>
 20a:	88 c0       	rjmp	.+272    	; 0x31c <task_HCSR+0x128>
 20c:	85 b1       	in	r24, 0x05	; 5
 20e:	82 60       	ori	r24, 0x02	; 2
 210:	85 b9       	out	0x05, r24	; 5
 212:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 216:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 21a:	42 96       	adiw	r24, 0x12	; 18
 21c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 220:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 224:	ef e6       	ldi	r30, 0x6F	; 111
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	86 60       	ori	r24, 0x06	; 6
 22c:	80 83       	st	Z, r24
 22e:	e1 e8       	ldi	r30, 0x81	; 129
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	8f 7b       	andi	r24, 0xBF	; 191
 236:	80 83       	st	Z, r24
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 23e:	aa e0       	ldi	r26, 0x0A	; 10
 240:	b1 e0       	ldi	r27, 0x01	; 1
 242:	ec 91       	ld	r30, X
 244:	8e 0f       	add	r24, r30
 246:	8c 93       	st	X, r24
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	e6 5f       	subi	r30, 0xF6	; 246
 24c:	fe 4f       	sbci	r31, 0xFE	; 254
 24e:	80 e3       	ldi	r24, 0x30	; 48
 250:	82 83       	std	Z+2, r24	; 0x02
 252:	64 c0       	rjmp	.+200    	; 0x31c <task_HCSR+0x128>
 254:	aa e0       	ldi	r26, 0x0A	; 10
 256:	b1 e0       	ldi	r27, 0x01	; 1
 258:	ec 91       	ld	r30, X
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	8e 0f       	add	r24, r30
 25e:	8c 93       	st	X, r24
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	e6 5f       	subi	r30, 0xF6	; 246
 264:	fe 4f       	sbci	r31, 0xFE	; 254
 266:	81 e3       	ldi	r24, 0x31	; 49
 268:	82 83       	std	Z+2, r24	; 0x02
 26a:	58 c0       	rjmp	.+176    	; 0x31c <task_HCSR+0x128>
 26c:	aa e0       	ldi	r26, 0x0A	; 10
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	ec 91       	ld	r30, X
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	8e 0f       	add	r24, r30
 276:	8c 93       	st	X, r24
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	e6 5f       	subi	r30, 0xF6	; 246
 27c:	fe 4f       	sbci	r31, 0xFE	; 254
 27e:	83 e3       	ldi	r24, 0x33	; 51
 280:	82 83       	std	Z+2, r24	; 0x02
 282:	4c c0       	rjmp	.+152    	; 0x31c <task_HCSR+0x128>
 284:	e2 e0       	ldi	r30, 0x02	; 2
 286:	f1 e0       	ldi	r31, 0x01	; 1
 288:	21 81       	ldd	r18, Z+1	; 0x01
 28a:	32 81       	ldd	r19, Z+2	; 0x02
 28c:	83 81       	ldd	r24, Z+3	; 0x03
 28e:	94 81       	ldd	r25, Z+4	; 0x04
 290:	82 17       	cp	r24, r18
 292:	93 07       	cpc	r25, r19
 294:	48 f0       	brcs	.+18     	; 0x2a8 <task_HCSR+0xb4>
 296:	81 81       	ldd	r24, Z+1	; 0x01
 298:	92 81       	ldd	r25, Z+2	; 0x02
 29a:	23 81       	ldd	r18, Z+3	; 0x03
 29c:	34 81       	ldd	r19, Z+4	; 0x04
 29e:	82 1b       	sub	r24, r18
 2a0:	93 0b       	sbc	r25, r19
 2a2:	96 83       	std	Z+6, r25	; 0x06
 2a4:	85 83       	std	Z+5, r24	; 0x05
 2a6:	0a c0       	rjmp	.+20     	; 0x2bc <task_HCSR+0xc8>
 2a8:	e2 e0       	ldi	r30, 0x02	; 2
 2aa:	f1 e0       	ldi	r31, 0x01	; 1
 2ac:	83 81       	ldd	r24, Z+3	; 0x03
 2ae:	94 81       	ldd	r25, Z+4	; 0x04
 2b0:	21 81       	ldd	r18, Z+1	; 0x01
 2b2:	32 81       	ldd	r19, Z+2	; 0x02
 2b4:	82 1b       	sub	r24, r18
 2b6:	93 0b       	sbc	r25, r19
 2b8:	96 83       	std	Z+6, r25	; 0x06
 2ba:	85 83       	std	Z+5, r24	; 0x05
 2bc:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__data_end+0x5>
 2c0:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__data_end+0x6>
 2c4:	81 35       	cpi	r24, 0x51	; 81
 2c6:	9d 42       	sbci	r25, 0x2D	; 45
 2c8:	30 f0       	brcs	.+12     	; 0x2d6 <task_HCSR+0xe2>
 2ca:	8f ef       	ldi	r24, 0xFF	; 255
 2cc:	9f ef       	ldi	r25, 0xFF	; 255
 2ce:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <__data_end+0x6>
 2d2:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__data_end+0x5>
 2d6:	82 e4       	ldi	r24, 0x42	; 66
 2d8:	91 e4       	ldi	r25, 0x41	; 65
 2da:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <coder+0x1>
 2de:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <coder>
 2e2:	ca e0       	ldi	r28, 0x0A	; 10
 2e4:	d1 e0       	ldi	r29, 0x01	; 1
 2e6:	e8 81       	ld	r30, Y
 2e8:	a1 e0       	ldi	r26, 0x01	; 1
 2ea:	ae 0f       	add	r26, r30
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	e6 5f       	subi	r30, 0xF6	; 246
 2f0:	fe 4f       	sbci	r31, 0xFE	; 254
 2f2:	82 e4       	ldi	r24, 0x42	; 66
 2f4:	82 83       	std	Z+2, r24	; 0x02
 2f6:	e1 e0       	ldi	r30, 0x01	; 1
 2f8:	ea 0f       	add	r30, r26
 2fa:	b0 e0       	ldi	r27, 0x00	; 0
 2fc:	a6 5f       	subi	r26, 0xF6	; 246
 2fe:	be 4f       	sbci	r27, 0xFE	; 254
 300:	81 e4       	ldi	r24, 0x41	; 65
 302:	12 96       	adiw	r26, 0x02	; 2
 304:	8c 93       	st	X, r24
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	8e 0f       	add	r24, r30
 30a:	88 83       	st	Y, r24
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	e6 5f       	subi	r30, 0xF6	; 246
 310:	fe 4f       	sbci	r31, 0xFE	; 254
 312:	80 e2       	ldi	r24, 0x20	; 32
 314:	82 83       	std	Z+2, r24	; 0x02
 316:	85 e0       	ldi	r24, 0x05	; 5
 318:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	08 95       	ret

00000322 <task_USART>:
 322:	fc 01       	movw	r30, r24
 324:	81 81       	ldd	r24, Z+1	; 0x01
 326:	90 81       	ld	r25, Z
 328:	89 17       	cp	r24, r25
 32a:	71 f0       	breq	.+28     	; 0x348 <task_USART+0x26>
 32c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 330:	95 ff       	sbrs	r25, 5
 332:	0a c0       	rjmp	.+20     	; 0x348 <task_USART+0x26>
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	98 0f       	add	r25, r24
 338:	91 83       	std	Z+1, r25	; 0x01
 33a:	df 01       	movw	r26, r30
 33c:	a8 0f       	add	r26, r24
 33e:	b1 1d       	adc	r27, r1
 340:	12 96       	adiw	r26, 0x02	; 2
 342:	8c 91       	ld	r24, X
 344:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 348:	80 81       	ld	r24, Z
 34a:	81 7f       	andi	r24, 0xF1	; 241
 34c:	80 83       	st	Z, r24
 34e:	81 81       	ldd	r24, Z+1	; 0x01
 350:	81 7f       	andi	r24, 0xF1	; 241
 352:	81 83       	std	Z+1, r24	; 0x01
 354:	08 95       	ret

00000356 <main>:
}
/* END Function prototypes user code ------------------------------------------*/

int main()
{
	cli();
 356:	f8 94       	cli

	/* END Local variables -------------------------------------------------------*/


	/* User code Init ------------------------------------------------------------*/
	flag0.byte = 0; 
 358:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <flag0>
	initialize_ports();
 35c:	0e 94 c9 00 	call	0x192	; 0x192 <initialize_ports>
	initialize_timer1();
 360:	0e 94 ce 00 	call	0x19c	; 0x19c <initialize_timer1>
	initialize_HCSR();
 364:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <initialize_HCSR>
	initialize_USART(16); // 16 PARA atmega328 para 115200
 368:	80 e1       	ldi	r24, 0x10	; 16
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <initialize_USART>

	/* END User code Init --------------------------------------------------------*/

	sei();
 370:	78 94       	sei
	while (1)
	{
		/* User Code loop ------------------------------------------------------------*/
		task_USART(&datosComSerie);
 372:	8a e0       	ldi	r24, 0x0A	; 10
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	0e 94 91 01 	call	0x322	; 0x322 <task_USART>
		task_HCSR();
 37a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <task_HCSR>
		if (IS10MS){
 37e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <flag0>
 382:	80 ff       	sbrs	r24, 0
 384:	f6 cf       	rjmp	.-20     	; 0x372 <main+0x1c>
			IS10MS = FALSE;
 386:	8e 7f       	andi	r24, 0xFE	; 254
 388:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <flag0>
			counter--;
 38c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 390:	81 50       	subi	r24, 0x01	; 1
 392:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			
			//USART_Transmit(0x41);

			if(!counter){
 396:	81 11       	cpse	r24, r1
 398:	ec cf       	rjmp	.-40     	; 0x372 <main+0x1c>
				counter = 10; 
 39a:	8a e0       	ldi	r24, 0x0A	; 10
 39c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				task_100ms();
 3a0:	0e 94 f7 00 	call	0x1ee	; 0x1ee <task_100ms>
 3a4:	e6 cf       	rjmp	.-52     	; 0x372 <main+0x1c>

000003a6 <_exit>:
 3a6:	f8 94       	cli

000003a8 <__stop_program>:
 3a8:	ff cf       	rjmp	.-2      	; 0x3a8 <__stop_program>
